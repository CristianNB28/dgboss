        <div class="footer">
            
        </div>
    </div>
</div>



<!-- Mainly scripts -->
<script src="/js/jquery-3.1.1.min.js"></script>
<script src="/js/jquery-2.1.1.js"></script>
<script src="/js/popper.min.js"></script>
<script src="/js/bootstrap.js"></script>
<script src="/js/plugins/metisMenu/jquery.metisMenu.js"></script>
<script src="/js/plugins/slimscroll/jquery.slimscroll.min.js"></script>

<!-- Custom and plugin javascript -->
<script src="/js/inspinia.js"></script>
<script src="/js/plugins/pace/pace.min.js"></script>

<!-- Steps -->
<script src="/js/plugins/steps/jquery.steps.min.js"></script>

<!-- Jquery Validate -->
<script src="/js/plugins/validate/jquery.validate.min.js"></script>

<!-- DataTables -->
<script src="/js/plugins/dataTables/datatables.min.js"></script>
<script src="/js/plugins/dataTables/dataTables.bootstrap4.min.js"></script>

<script src="/js/plugins/jquery.cookie/jquery.cookie.js"></script>

<script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script src="/js/moment.js"></script>

<script src="/js/cleave-js/cleave.min.js"></script>

<script>
    var policies = <%- JSON.stringify(policies) %>;
    var receipts = <%- JSON.stringify(receipts) %>;
    $.extend($.validator.messages, {
        required: "Este campo es obligatorio",
        remote: "Por favor, rellena este campo",
        email: "Por favor, escribe una dirección de correo válida",
        url: "Por favor, escribe una URL válida",
        date: "Por favor, escribe una fecha válida",
        dateISO: "Por favor, escribe una fecha (ISO) válida",
        number: "Por favor, escribe un número entero válido",
        digits: "Por favor, escribe sólo dígitos",
        creditcard: "Por favor, escribe un número de tarjeta válido",
        equalTo: "Por favor, escribe el mismo valor de nuevo",
        accept: "Por favor, escribe un valor con una extensión aceptada",
        maxlength: $.validator.format("Por favor, no escribas más de {0} caracteres"),
        minlength: $.validator.format("Por favor, no escribas menos de {0} caracteres"),
        rangelength: $.validator.format("Por favor, escribe un valor entre {0} y {1} caracteres"),
        range: $.validator.format("Por favor, escribe un valor entre {0} y {1}"),
        max: $.validator.format("Por favor, escribe un valor menor o igual a {0}"),
        min: $.validator.format("Por favor, escribe un valor mayor o igual a {0}"),
        step: $.validator.format("Por favor, escribe un múltiplo de {0}")
    });
    function esRepetidoNumPoliza(value, element, param) {
        let numberPolicy = document.getElementById("numero_poliza").value;
        const even = (policy) => policy.numero_poliza === numberPolicy;
        if (policies.some(even) === true) {
            return false;
        } else {
            return true;
        }
    }
    function esRepetidoNumRecibo(value, element, param) {
        let numberReceipt = document.getElementById("numero_recibo").value;
        const even = (receipt) => receipt.numero_recibo === numberReceipt;
        if (receipts.some(even) === true) {
            return false;
        } else {
            return true;
        }
    }
    $.validator.addMethod("esrepetidonumpoliza", esRepetidoNumPoliza, "Se repite el número de póliza");
    $.validator.addMethod("esrepetidonumrecibo", esRepetidoNumRecibo, "Se repite el número de recibo");
    $(document).ready(function(){
        $("#wizard").steps();
        $("#form-health-policy").steps({
            headerTag: "h1",
            bodyTag: "fieldset",
            titleTemplate:"<span class='text'></span> #title#",
            saveState: true,
            labels: {
                cancel: "Cancelar",
                current: "current step:",
                pagination: "Pagination",
                finish: "Cerrar",
                next: "Siguiente",
                previous: "Anterior",
                loading: "Cargando ..."
            },
            onStepChanging: (event, currentIndex, newIndex) => {
                if (currentIndex > newIndex)
                {
                    return true;
                }
                if (newIndex === 5)
                {
                    return false;
                }
                if (newIndex === 1) {
                    $("#policy-form-health").validate().settings.ignore = ":disabled,:hidden";
                    return $("#policy-form-health").valid();
                } else if (newIndex === 2) {
                    return true;
                } else if (newIndex === 3) {
                    $('#receipt-form-health').validate().settings.ignore = ":disabled,:hidden";
                    return $('#receipt-form-health').valid();
                } else if (newIndex === 4) {
                    $('#commission-form-health').validate().settings.ignore = ":disabled,:hidden";
                    return $('#commission-form-health').valid();
                }
            },
            onStepChanged: (event, currentIndex, priorIndex) => {
                if (currentIndex === 1 && priorIndex === 2) {
                    $("a[href$='previous']").on('click', function (event) {
                        event.preventdefault();
                    });
                    return;
                } else if (currentIndex === 3 && priorIndex === 4) {
                    $("a[href$='previous']").on('click', function (event) {
                        event.preventdefault();
                    });
                    return;
                }
                if (currentIndex === 1) {
                    storeValuesPolicyHealth();
                    $('#policy-form-health').submit();
                } else if (currentIndex === 3) {
                    storeValuesReceiptHealth();
                    $('#receipt-form-health').submit();
                } else if (currentIndex === 4) {
                    storeValuesCommissionHealth();
                    $('#commission-form-health').submit();
                }
            },
            onFinishing:(event, currentIndex) => {
                $('#verification-form').validate().settings.ignore = ":disabled";
                return $('#verification-form').valid();
            },
            onFinished: (a) => {
                localStorage.clear();
                $('#form-health-policy .steps a:eq(0)').click();
                $('#form-health-policy').hide();
                $('#verification-form').submit();
            }
        });
        $().ready(function () {
            $("#policy-form-health").validate({
                rules: {
                    numero_poliza: {
                        esrepetidonumpoliza: true
                    }
                }
            });
        });
        $().ready(function () {
            $("#receipt-form-health").validate({
                rules: {
                    numero_recibo: {
                        esrepetidonumrecibo: true
                    }
                }
            });
        });
        $("#receipt-form-health").on('keyup','.porcentaje_tasa',function(){
            new Cleave('.porcentaje_tasa', {
                numeral: true,
                numeralDecimalMark: ',',
                delimiter: '.',
                prefix: '%',
                tailPrefix: true
            });    
        });
        $("#commission-form-health").on('keyup','.porcentaje_tasa',function(){
            $('.porcentaje_tasa').toArray().forEach(function(field) {
                new Cleave(field, {
                    numeral: true,
                    numeralDecimalMark: ',',
                    delimiter: '.',
                    prefix: '%',
                    tailPrefix: true
                });
            });
        });
    });
</script>

<script>
    var policies = <%- JSON.stringify(policies) %>;
    var receipts = <%- JSON.stringify(receipts) %>;
    $.extend($.validator.messages, {
        required: "Este campo es obligatorio",
        remote: "Por favor, rellena este campo",
        email: "Por favor, escribe una dirección de correo válida",
        url: "Por favor, escribe una URL válida",
        date: "Por favor, escribe una fecha válida",
        dateISO: "Por favor, escribe una fecha (ISO) válida",
        number: "Por favor, escribe un número entero válido",
        digits: "Por favor, escribe sólo dígitos",
        creditcard: "Por favor, escribe un número de tarjeta válido",
        equalTo: "Por favor, escribe el mismo valor de nuevo",
        accept: "Por favor, escribe un valor con una extensión aceptada",
        maxlength: $.validator.format("Por favor, no escribas más de {0} caracteres"),
        minlength: $.validator.format("Por favor, no escribas menos de {0} caracteres"),
        rangelength: $.validator.format("Por favor, escribe un valor entre {0} y {1} caracteres"),
        range: $.validator.format("Por favor, escribe un valor entre {0} y {1}"),
        max: $.validator.format("Por favor, escribe un valor menor o igual a {0}"),
        min: $.validator.format("Por favor, escribe un valor mayor o igual a {0}"),
        step: $.validator.format("Por favor, escribe un múltiplo de {0}")
    });
    function esRepetidoNumPoliza(value, element, param) {
        let numberPolicy = document.getElementById("numero_poliza").value
        const even = (policy) => policy.numero_poliza === numberPolicy;
        if (policies.some(even) === true) {
            return false;
        } else {
            return true;
        }
    }
    function esRepetidoNumRecibo(value, element, param) {
        let numberReceipt = document.getElementById("numero_recibo").value
        const even = (receipt) => receipt.numero_recibo === numberReceipt;
        if (receipts.some(even) === true) {
            return false;
        } else {
            return true;
        }
    }
    $.validator.addMethod("esrepetidonumpoliza", esRepetidoNumPoliza, "Se repite el número de póliza");
    $.validator.addMethod("esrepetidonumrecibo", esRepetidoNumRecibo, "Se repite el número de recibo");
    $(document).ready(function(){
        $("#wizard").steps();
        $("#form-vehicle-policy").steps({
            headerTag: "h1",
            bodyTag: "fieldset",
            titleTemplate:"<span class='text'></span> #title#",
            saveState: true,
            labels: {
                cancel: "Cancelar",
                current: "current step:",
                pagination: "Pagination",
                finish: "Cerrar",
                next: "Siguiente",
                previous: "Anterior",
                loading: "Cargando ..."
            },
            onStepChanging: (event, currentIndex, newIndex) => {
                if (currentIndex > newIndex)
                {
                    return true;
                }
                if (newIndex === 5)
                {
                    return false;
                }
                if (newIndex === 1) {
                    $("#policy-form-vehicle").validate().settings.ignore = ":disabled,:hidden";
                    return $("#policy-form-vehicle").valid();
                } else if (newIndex === 2) {
                    $('#extra-form-vehicle').validate().settings.ignore = ":disabled,:hidden";
                    return $('#extra-form-vehicle').valid();
                } else if (newIndex === 3) {
                    $('#receipt-form-vehicle').validate().settings.ignore = ":disabled,:hidden";
                    return $('#receipt-form-vehicle').valid();
                } else if (newIndex === 4) {
                    $('#commission-form-vehicle').validate().settings.ignore = ":disabled,:hidden";
                    return $('#commission-form-vehicle').valid();
                }
            },
            onStepChanged: (event, currentIndex, priorIndex) => {
                if (currentIndex === 1 && priorIndex === 2) {
                    $("a[href$='previous']").on('click', function (event) {
                        event.preventdefault();
                    });
                    return;
                } else if (currentIndex === 2 && priorIndex === 3) {
                    $("a[href$='previous']").on('click', function (event) {
                        event.preventdefault();
                    });
                    return;
                } else if (currentIndex === 3 && priorIndex === 4) {
                    $("a[href$='previous']").on('click', function (event) {
                        event.preventdefault();
                    });
                    return;
                }
                if (currentIndex === 1) {
                    storeValuesPolicyVehicle();
                    $('#policy-form-vehicle').submit();
                } else if (currentIndex === 2) {
                    storeValuesExtraVehicle();
                    $('#extra-form-vehicle').submit();
                } else if (currentIndex === 3) {
                    storeValuesReceiptVehicle();
                    $('#receipt-form-vehicle').submit();
                } else if (currentIndex === 4) {
                    storeValuesCommissionVehicle();
                    $('#commission-form-vehicle').submit();
                }
            },
            onFinishing:(event, currentIndex) => {
                $('#verification-form').validate().settings.ignore = ":disabled";
                return $('#verification-form').valid();
            },
            onFinished: (a) => {
                localStorage.clear();
                $('#form-vehicle-policy .steps a:eq(0)').click();
                $('#form-vehicle-policy').hide();
                $('#verification-form').submit();
            }
        });
        $().ready(function () {
            $("#policy-form-vehicle").validate({
                rules: {
                    numero_poliza: {
                        esrepetidonumpoliza: true
                    }
                }
            });
        });
        $().ready(function () {
            $("#receipt-form-vehicle").validate({
                rules: {
                    numero_recibo: {
                        esrepetidonumrecibo: true
                    }
                }
            });
        });
        $("#policy-form-vehicle").on('keyup','.porcentaje_tasa',function(){
            new Cleave('.porcentaje_tasa', {
                numeral: true,
                numeralDecimalMark: ',',
                delimiter: '.',
                prefix: '%',
                tailPrefix: true
            });    
        });
        $("#extra-form-vehicle").on('keyup','.number_format',function(){
            var separador = $(this);
            for (var i = 0 ; i < separador.length; i++) {
                separador[i].addEventListener('input', (e) => {
                    var entrada = e.target.value.split(','),
                    parteEntera = entrada[0].replace(/\./g, ''),
                    parteDecimal = entrada[1],
                    salida = parteEntera.replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1.");
                    e.target.value = salida + (parteDecimal !== undefined ? ',' + parteDecimal.replace(/([0-9])([0-9]{2})$/,'') : '');
                }, false); 
            }    
        });
        $("#receipt-form-vehicle").on('keyup','.porcentaje_tasa',function(){
            $('.porcentaje_tasa').toArray().forEach(function(field) {
                new Cleave(field, {
                    numeral: true,
                    numeralDecimalMark: ',',
                    delimiter: '.',
                    prefix: '%',
                    tailPrefix: true
                });
            });    
        });
        $("#commission-form-vehicle").on('keyup','.porcentaje_tasa',function(){
            $('.porcentaje_tasa').toArray().forEach(function(field) {
                new Cleave(field, {
                    numeral: true,
                    numeralDecimalMark: ',',
                    delimiter: '.',
                    prefix: '%',
                    tailPrefix: true
                });
            });
        });
    });
</script>

<script>
    var policies = <%- JSON.stringify(policies) %>;
    var receipts = <%- JSON.stringify(receipts) %>;
    $.extend($.validator.messages, {
        required: "Este campo es obligatorio",
        remote: "Por favor, rellena este campo",
        email: "Por favor, escribe una dirección de correo válida",
        url: "Por favor, escribe una URL válida",
        date: "Por favor, escribe una fecha válida",
        dateISO: "Por favor, escribe una fecha (ISO) válida",
        number: "Por favor, escribe un número entero válido",
        digits: "Por favor, escribe sólo dígitos",
        creditcard: "Por favor, escribe un número de tarjeta válido",
        equalTo: "Por favor, escribe el mismo valor de nuevo",
        accept: "Por favor, escribe un valor con una extensión aceptada",
        maxlength: $.validator.format("Por favor, no escribas más de {0} caracteres"),
        minlength: $.validator.format("Por favor, no escribas menos de {0} caracteres"),
        rangelength: $.validator.format("Por favor, escribe un valor entre {0} y {1} caracteres"),
        range: $.validator.format("Por favor, escribe un valor entre {0} y {1}"),
        max: $.validator.format("Por favor, escribe un valor menor o igual a {0}"),
        min: $.validator.format("Por favor, escribe un valor mayor o igual a {0}"),
        step: $.validator.format("Por favor, escribe un múltiplo de {0}")
    });
    function esRepetidoNumPoliza(value, element, param) {
        let numberPolicy = document.getElementById("numero_poliza").value
        const even = (policy) => policy.numero_poliza === numberPolicy;
        if (policies.some(even) === true) {
            return false;
        } else {
            return true;
        }
    }
    function esRepetidoNumRecibo(value, element, param) {
        let numberReceipt = document.getElementById("numero_recibo").value
        const even = (receipt) => receipt.numero_recibo === numberReceipt;
        if (receipts.some(even) === true) {
            return false;
        } else {
            return true;
        }
    }
    $.validator.addMethod("esrepetidonumpoliza", esRepetidoNumPoliza, "Se repite el número de póliza");
    $.validator.addMethod("esrepetidonumrecibo", esRepetidoNumRecibo, "Se repite el número de recibo");
    $(document).ready(function(){
        $("#wizard").steps();
        $("#form-funeral").steps({
            headerTag: "h1",
            bodyTag: "fieldset",
            titleTemplate:"<span class='text'></span> #title#",
            saveState: true,
            labels: {
                cancel: "Cancelar",
                current: "current step:",
                pagination: "Pagination",
                finish: "Cerrar",
                next: "Siguiente",
                previous: "Anterior",
                loading: "Cargando ..."
            },
            onStepChanging: (event, currentIndex, newIndex) => {
                if (currentIndex > newIndex)
                {
                    return true;
                }
                if (newIndex === 5)
                {
                    return false;
                }
                if (newIndex === 1) {
                    $("#policy-form-funeral").validate().settings.ignore = ":disabled,:hidden";
                    return $("#policy-form-funeral").valid();
                } else if (newIndex === 2) {
                    return true;
                } else if (newIndex === 3) {
                    $('#receipt-form-funeral').validate().settings.ignore = ":disabled,:hidden";
                    return $('#receipt-form-funeral').valid();
                } else if (newIndex === 4) {
                    $('#commission-form-funeral').validate().settings.ignore = ":disabled,:hidden";
                    return $('#commission-form-funeral').valid();
                }
            },
            onStepChanged: (event, currentIndex, priorIndex) => {
                if (currentIndex === 1 && priorIndex === 2) {
                    $("a[href$='previous']").on('click', function (event) {
                        event.preventdefault();
                    });
                    return;
                } else if (currentIndex === 3 && priorIndex === 4) {
                    $("a[href$='previous']").on('click', function (event) {
                        event.preventdefault();
                    });
                    return;
                }
                if (currentIndex === 1) {
                    storeValuesPolicyFuneral();
                    $('#policy-form-funeral').submit();
                } else if (currentIndex === 3) {
                    storeValuesReceiptFuneral();
                    $('#receipt-form-funeral').submit();
                } else if (currentIndex === 4) {
                    storeValuesCommissionFuneral();
                    $('#commission-form-funeral').submit();
                }
            },
            onFinishing:(event, currentIndex) => {
                $('#verification-form').validate().settings.ignore = ":disabled";
                return $('#verification-form').valid();
            },
            onFinished: (a) => {
                localStorage.clear();
                $('#form-funeral .steps a:eq(0)').click();
                $('#form-funeral').hide();
                $('#verification-form').submit();
            }
        });
        $().ready(function () {
            $("#policy-form-funeral").validate({
                rules: {
                    numero_poliza: {
                        esrepetidonumpoliza: true
                    }
                }
            });
        });
        $().ready(function () {
            $("#receipt-form-funeral").validate({
                rules: {
                    numero_recibo: {
                        esrepetidonumrecibo: true
                    }
                }
            });
        });
        $("#receipt-form-funeral").on('keyup','.porcentaje_tasa',function(){
            new Cleave('.porcentaje_tasa', {
                numeral: true,
                numeralDecimalMark: ',',
                delimiter: '.',
                prefix: '%',
                tailPrefix: true
            });    
        });
        $("#commission-form-funeral").on('keyup','.porcentaje_tasa',function(){
            $('.porcentaje_tasa').toArray().forEach(function(field) {
                new Cleave(field, {
                    numeral: true,
                    numeralDecimalMark: ',',
                    delimiter: '.',
                    prefix: '%',
                    tailPrefix: true
                });
            });
        });
    });
</script>

<script>
    var policies = <%- JSON.stringify(policies) %>;
    var receipts = <%- JSON.stringify(receipts) %>;
    $.extend($.validator.messages, {
        required: "Este campo es obligatorio",
        remote: "Por favor, rellena este campo",
        email: "Por favor, escribe una dirección de correo válida",
        url: "Por favor, escribe una URL válida",
        date: "Por favor, escribe una fecha válida",
        dateISO: "Por favor, escribe una fecha (ISO) válida",
        number: "Por favor, escribe un número entero válido",
        digits: "Por favor, escribe sólo dígitos",
        creditcard: "Por favor, escribe un número de tarjeta válido",
        equalTo: "Por favor, escribe el mismo valor de nuevo",
        accept: "Por favor, escribe un valor con una extensión aceptada",
        maxlength: $.validator.format("Por favor, no escribas más de {0} caracteres"),
        minlength: $.validator.format("Por favor, no escribas menos de {0} caracteres"),
        rangelength: $.validator.format("Por favor, escribe un valor entre {0} y {1} caracteres"),
        range: $.validator.format("Por favor, escribe un valor entre {0} y {1}"),
        max: $.validator.format("Por favor, escribe un valor menor o igual a {0}"),
        min: $.validator.format("Por favor, escribe un valor mayor o igual a {0}"),
        step: $.validator.format("Por favor, escribe un múltiplo de {0}")
    });
    function esRepetidoNumPoliza(value, element, param) {
        let numberPolicy = document.getElementById("numero_poliza").value
        const even = (policy) => policy.numero_poliza === numberPolicy;
        if (policies.some(even) === true) {
            return false;
        } else {
            return true;
        }
    }
    function esRepetidoNumRecibo(value, element, param) {
        let numberReceipt = document.getElementById("numero_recibo").value
        const even = (receipt) => receipt.numero_recibo === numberReceipt;
        if (receipts.some(even) === true) {
            return false;
        } else {
            return true;
        }
    }
    $.validator.addMethod("esrepetidonumpoliza", esRepetidoNumPoliza, "Se repite el número de póliza");
    $.validator.addMethod("esrepetidonumrecibo", esRepetidoNumRecibo, "Se repite el número de recibo");
    $(document).ready(function(){
        $("#wizard").steps();
        $("#form-life").steps({
            headerTag: "h1",
            bodyTag: "fieldset",
            titleTemplate:"<span class='text'></span> #title#",
            saveState: true,
            labels: {
                cancel: "Cancelar",
                current: "current step:",
                pagination: "Pagination",
                finish: "Cerrar",
                next: "Siguiente",
                previous: "Anterior",
                loading: "Cargando ..."
            },
            onStepChanging: (event, currentIndex, newIndex) => {
                if (currentIndex > newIndex)
                {
                    return true;
                }
                if (newIndex === 5)
                {
                    return false;
                }
                if (newIndex === 1) {
                    $("#policy-form-life").validate().settings.ignore = ":disabled,:hidden";
                    return $("#policy-form-life").valid();
                } else if (newIndex === 2) {
                    return true;
                } else if (newIndex === 3) {
                    $('#receipt-form-life').validate().settings.ignore = ":disabled,:hidden";
                    return $('#receipt-form-life').valid();
                } else if (newIndex === 4) {
                    $('#commission-form-life').validate().settings.ignore = ":disabled,:hidden";
                    return $('#commission-form-life').valid();
                }
            },
            onStepChanged: (event, currentIndex, priorIndex) => {
                if (currentIndex === 1 && priorIndex === 2) {
                    $("a[href$='previous']").on('click', function (event) {
                        event.preventdefault();
                    });
                    return;
                } else if (currentIndex === 3 && priorIndex === 4) {
                    $("a[href$='previous']").on('click', function (event) {
                        event.preventdefault();
                    });
                    return;
                }
                if (currentIndex === 1) {
                    storeValuesPolicyLife();
                    $('#policy-form-life').submit();
                } else if (currentIndex === 3) {
                    storeValuesReceiptLife();
                    $('#receipt-form-life').submit();
                } else if (currentIndex === 4) {
                    storeValuesCommissionLife();
                    $('#commission-form-life').submit();
                }
            },
            onFinishing:(event, currentIndex) => {
                $('#verification-form').validate().settings.ignore = ":disabled";
                return $('#verification-form').valid();
            },
            onFinished: (a) => {
                localStorage.clear();
                $('#form-life .steps a:eq(0)').click();
                $('#form-life').hide();
                $('#verification-form').submit();
            }
        });
        $().ready(function () {
            $("#policy-form-life").validate({
                rules: {
                    numero_poliza: {
                        esrepetidonumpoliza: true
                    }
                }
            });
        });
        $().ready(function () {
            $("#receipt-form-life").validate({
                rules: {
                    numero_recibo: {
                        esrepetidonumrecibo: true
                    }
                }
            });
        });
        $("#receipt-form-life").on('keyup','.porcentaje_tasa',function(){
            new Cleave('.porcentaje_tasa', {
                numeral: true,
                numeralDecimalMark: ',',
                delimiter: '.',
                prefix: '%',
                tailPrefix: true
            });    
        });
        $("#commission-form-life").on('keyup','.porcentaje_tasa',function(){
            $('.porcentaje_tasa').toArray().forEach(function(field) {
                new Cleave(field, {
                    numeral: true,
                    numeralDecimalMark: ',',
                    delimiter: '.',
                    prefix: '%',
                    tailPrefix: true
                });
            });
        });
    });
</script>

<% if(typeof alert != 'undefined') { %>
    <script>
        Swal.fire({
            title: '<%= alertTitle %>',
            text: '<%= alertMessage %>',
            icon: '<%= alertIcon %>',
            showConfirmButton: <%= showConfirmButton %>,
            timer: <%= timer %>
        }).then(()=>{
            window.location='/<%= ruta %>'
        })
    </script>
<% } %>

<!-- Poliza de Salud -->
<script>
    function storeValuesPolicyHealth() {
        let formDataPolicyHealth = [];
        localStorage.removeItem('formDataPolicyHealth');
        $('#policy-form-health input[type=text]').each(function(){
            formDataPolicyHealth.push({ name: this.name, value: this.value});
        });
        $('#policy-form-health input[type=email]').each(function(){
            formDataPolicyHealth.push({ name: this.name, value: this.value});
        });
        $('#policy-form-health input[type=date]').each(function(){
            formDataPolicyHealth.push({ name: this.name, value: this.value});
        });
        $('#policy-form-health select').each(function(){
            formDataPolicyHealth.push({ name: this.name, value: this.value});
        });
        $('#policy-form-health #tomador_asegurado_poliza').each(function(){
            let markedCheck = $(this).prop('checked');
            formDataPolicyHealth.push({ name: this.name, value: markedCheck});
        });
        localStorage.setItem("formDataPolicyHealth", JSON.stringify(formDataPolicyHealth));
    }
    function getPolicyHealth() {
        if(localStorage.formDataPolicyHealth !== undefined){
            formDataPolicyHealth = JSON.parse(localStorage.formDataPolicyHealth);
            for (var i = 0; i < formDataPolicyHealth.length; i++) {
                $(`[name=${formDataPolicyHealth[i].name}]`).val(formDataPolicyHealth[i].value);
                if ((formDataPolicyHealth[i].name === 'tomador_asegurado_poliza') && (formDataPolicyHealth[i].value === true)) {
                    document.getElementById("tomador_asegurado_poliza").checked = formDataPolicyHealth[i].value;
                }
                if ((formDataPolicyHealth[i].name === 'maternidad_poliza') && (formDataPolicyHealth[i].value === 'SÍ')) {
                    document.getElementById("searchinput").style.display = "block";
                }
                if ((formDataPolicyHealth[i].name === 'plazo_espera_poliza') && (formDataPolicyHealth[i].value === 'SÍ')) {
                    document.getElementById("searchinput2").style.display = "block";
                }
                if ((formDataPolicyHealth[i].name === 'tipo_canal_poliza') && (formDataPolicyHealth[i].value === 'AGENTE PROPIO')) {
                    document.getElementById("searchList").style.display = "block";
                }
            }
        }
    }
</script>

<script>
    function storeValuesReceiptHealth() {
        let formDataReceiptHealth = [];
        localStorage.removeItem('formDataReceiptHealth');
        $('#receipt-form-health input[type=text]').each(function(){
            formDataReceiptHealth.push({ name: this.name, value: this.value});
        });
        $('#receipt-form-health input[type=number]').each(function(){
            formDataReceiptHealth.push({ name: this.name, value: this.value});
        });
        $('#receipt-form-health input[type=date]').each(function(){
            formDataReceiptHealth.push({ name: this.name, value: this.value});
        });
        $('#receipt-form-health select').each(function(){
            formDataReceiptHealth.push({ name: this.name, value: this.value});
        });
        $('#receipt-form-health #fraccionamiento_boolean_recibo').each(function(){
            let markedCheck = $(this).prop('checked');
            formDataReceiptHealth.push({ name: this.name, value: markedCheck});
        });
        localStorage.setItem("formDataReceiptHealth", JSON.stringify(formDataReceiptHealth));
    }
    function getReceiptHealth() {
        if(localStorage.formDataReceiptHealth !== undefined){
            formDataReceiptHealth = JSON.parse(localStorage.formDataReceiptHealth);
            for (var i = 0; i < formDataReceiptHealth.length; i++) {
                $(`[name=${formDataReceiptHealth[i].name}]`).val(formDataReceiptHealth[i].value);
                if ((formDataReceiptHealth[i].name === 'fraccionamiento_boolean_recibo') && (formDataReceiptHealth[i].value === true)) {
                    document.getElementById("fraccionamiento_boolean_recibo").checked = formDataReceiptHealth[i].value;
                    document.getElementById("active-select-1").style.display = "inline";
                    document.getElementById("active-select-2").style.display = "inline";
                }
            }
        }
    }
</script>

<script>
    function storeValuesCommissionHealth() {
        let formCommissionHealth = [];
        localStorage.removeItem('formCommissionHealth');
        $('#commission-form-health input[type=text]').each(function(){
            formCommissionHealth.push({ name: this.name, value: this.value});
        });
        localStorage.setItem("formCommissionHealth", JSON.stringify(formCommissionHealth));
    }
    function getCommissionHealth() {
        if(localStorage.formCommissionHealth !== undefined){
            formCommissionHealth = JSON.parse(localStorage.formCommissionHealth);
            for (var i = 0; i < formCommissionHealth.length; i++) {
                $(`[name=${formCommissionHealth[i].name}]`).val(formCommissionHealth[i].value);
            }
        }
    }
</script>

<!-- Poliza de Vehiculo -->
<script>
    function storeValuesPolicyVehicle() {
        let formDataPolicyVehicle = [];
        localStorage.removeItem('formDataPolicyVehicle');
        $('#policy-form-vehicle input[type=text]').each(function(){
            formDataPolicyVehicle.push({ name: this.name, value: this.value});
        });
        $('#policy-form-vehicle input[type=email]').each(function(){
            formDataPolicyVehicle.push({ name: this.name, value: this.value});
        });
        $('#policy-form-vehicle input[type=date]').each(function(){
            formDataPolicyVehicle.push({ name: this.name, value: this.value});
        });
        $('#policy-form-vehicle select').each(function(){
            formDataPolicyVehicle.push({ name: this.name, value: this.value});
        });
        $('#policy-form-vehicle #tomador_asegurado_poliza').each(function(){
            let markedCheck = $(this).prop('checked');
            formDataPolicyVehicle.push({ name: this.name, value: markedCheck});
        });
        localStorage.setItem("formDataPolicyVehicle", JSON.stringify(formDataPolicyVehicle));
    }
    function getPolicyVehicle() {
        if(localStorage.formDataPolicyVehicle !== undefined){
            formDataPolicyVehicle = JSON.parse(localStorage.formDataPolicyVehicle);
            for (var i = 0; i < formDataPolicyVehicle.length; i++) {
                $(`[name=${formDataPolicyVehicle[i].name}]`).val(formDataPolicyVehicle[i].value);
                if ((formDataPolicyVehicle[i].name === 'tomador_asegurado_poliza') && (formDataPolicyVehicle[i].value === true)) {
                    document.getElementById("tomador_asegurado_poliza").checked = formDataPolicyVehicle[i].value;
                }
                if ((formDataPolicyVehicle[i].name === 'tipo_canal_poliza') && (formDataPolicyVehicle[i].value === 'AGENTE PROPIO')) {
                    document.getElementById("searchList").style.display = "block";
                }
            }
        }
    }
</script>

<script>
    function storeValuesExtraVehicle() {
        let formDataExtraVehicle = [];
        localStorage.removeItem('formDataExtraVehicle');
        $('#extra-form-vehicle input[type=text]').each(function(){
            formDataExtraVehicle.push({ name: this.name, value: this.value});
        });
        $('#extra-form-vehicle input[type=number]').each(function(){
            formDataExtraVehicle.push({ name: this.name, value: this.value});
        });
        $('#extra-form-vehicle select').each(function(){
            formDataExtraVehicle.push({ name: this.name, value: this.value});
        });
        $('#extra-form-vehicle #blindaje_boolean_vehiculo').each(function(){
            let markedCheck = $(this).prop('checked');
            formDataExtraVehicle.push({ name: this.name, value: markedCheck});
        });
        localStorage.setItem("formDataExtraVehicle", JSON.stringify(formDataExtraVehicle));
    }
    function getExtraVehicle() {
        if(localStorage.formDataExtraVehicle !== undefined){
            formDataExtraVehicle = JSON.parse(localStorage.formDataExtraVehicle);
            for (var i = 0; i < formDataExtraVehicle.length; i++) {
                $(`[name=${formDataExtraVehicle[i].name}]`).val(formDataExtraVehicle[i].value);
                if ((formDataExtraVehicle[i].name === 'blindaje_boolean_vehiculo') && (formDataExtraVehicle[i].value === true)) {
                    document.getElementById("blindaje_boolean_vehiculo").checked = formDataExtraVehicle[i].value;
                    document.getElementById("active-select-3").style.display = "inline";
                    document.getElementById("active-select-4").style.display = "inline";
                }
            }
        }
    }
</script>

<script>
    function storeValuesReceiptVehicle() {
        let formDataReceiptVehicle = [];
        localStorage.removeItem('formDataReceiptVehicle');
        $('#receipt-form-vehicle input[type=text]').each(function(){
            formDataReceiptVehicle.push({ name: this.name, value: this.value});
        });
        $('#receipt-form-vehicle input[type=number]').each(function(){
            formDataReceiptVehicle.push({ name: this.name, value: this.value});
        });
        $('#receipt-form-vehicle input[type=date]').each(function(){
            formDataReceiptVehicle.push({ name: this.name, value: this.value});
        });
        $('#receipt-form-vehicle select').each(function(){
            formDataReceiptVehicle.push({ name: this.name, value: this.value});
        });
        $('#receipt-form-vehicle #fraccionamiento_boolean_recibo').each(function(){
            let markedCheck = $(this).prop('checked');
            formDataReceiptVehicle.push({ name: this.name, value: markedCheck});
        });
        localStorage.setItem("formDataReceiptVehicle", JSON.stringify(formDataReceiptVehicle));
    }
    function getReceiptVehicle() {
        if(localStorage.formDataReceiptVehicle !== undefined){
            formDataReceiptVehicle = JSON.parse(localStorage.formDataReceiptVehicle);
            for (var i = 0; i < formDataReceiptVehicle.length; i++) {
                $(`[name=${formDataReceiptVehicle[i].name}]`).val(formDataReceiptVehicle[i].value);
                if ((formDataReceiptVehicle[i].name === 'fraccionamiento_boolean_recibo') && (formDataReceiptVehicle[i].value === true)) {
                    document.getElementById("fraccionamiento_boolean_recibo").checked = formDataReceiptVehicle[i].value;
                    document.getElementById("active-select-1").style.display = "inline";
                    document.getElementById("active-select-2").style.display = "inline";
                }
            }
        }
    }
</script>

<script>
    function storeValuesCommissionVehicle() {
        let formCommissionVehicle = [];
        localStorage.removeItem('formCommissionVehicle');
        $('#commission-form-vehicle input[type=text]').each(function(){
            formCommissionVehicle.push({ name: this.name, value: this.value});
        });
        localStorage.setItem("formCommissionVehicle", JSON.stringify(formCommissionVehicle));
    }
    function getCommissionVehicle() {
        if(localStorage.formCommissionVehicle !== undefined){
            formCommissionVehicle = JSON.parse(localStorage.formCommissionVehicle);
            for (var i = 0; i < formCommissionVehicle.length; i++) {
                $(`[name=${formCommissionVehicle[i].name}]`).val(formCommissionVehicle[i].value);
            }
        }
    }
</script>

<!-- Poliza de Funeral -->
<script>
    function storeValuesPolicyFuneral() {
        let formDataPolicyFuneral = [];
        localStorage.removeItem('formDataPolicyFuneral');
        $('#policy-form-funeral input[type=text]').each(function(){
            formDataPolicyFuneral.push({ name: this.name, value: this.value});
        });
        $('#policy-form-funeral input[type=email]').each(function(){
            formDataPolicyFuneral.push({ name: this.name, value: this.value});
        });
        $('#policy-form-funeral input[type=date]').each(function(){
            formDataPolicyFuneral.push({ name: this.name, value: this.value});
        });
        $('#policy-form-funeral select').each(function(){
            formDataPolicyFuneral.push({ name: this.name, value: this.value});
        });
        $('#policy-form-funeral #tomador_asegurado_poliza').each(function(){
            let markedCheck = $(this).prop('checked');
            formDataPolicyFuneral.push({ name: this.name, value: markedCheck});
        });
        localStorage.setItem("formDataPolicyFuneral", JSON.stringify(formDataPolicyFuneral));
    }
    function getPolicyFuneral() {
        if(localStorage.formDataPolicyFuneral !== undefined){
            formDataPolicyFuneral = JSON.parse(localStorage.formDataPolicyFuneral);
            for (var i = 0; i < formDataPolicyFuneral.length; i++) {
                $(`[name=${formDataPolicyFuneral[i].name}]`).val(formDataPolicyFuneral[i].value);
                if ((formDataPolicyFuneral[i].name === 'tomador_asegurado_poliza') && (formDataPolicyFuneral[i].value === true)) {
                    document.getElementById("tomador_asegurado_poliza").checked = formDataPolicyFuneral[i].value;
                }
                if ((formDataPolicyFuneral[i].name === 'tipo_canal_poliza') && (formDataPolicyFuneral[i].value === 'AGENTE PROPIO')) {
                    document.getElementById("searchList").style.display = "block";
                }
            }
        }
    }
</script>

<script>
    function storeValuesReceiptFuneral() {
        let formDataReceiptFuneral = [];
        localStorage.removeItem('formDataReceiptFuneral');
        $('#receipt-form-funeral input[type=text]').each(function(){
            formDataReceiptFuneral.push({ name: this.name, value: this.value});
        });
        $('#receipt-form-funeral input[type=number]').each(function(){
            formDataReceiptFuneral.push({ name: this.name, value: this.value});
        });
        $('#receipt-form-funeral input[type=date]').each(function(){
            formDataReceiptFuneral.push({ name: this.name, value: this.value});
        });
        $('#receipt-form-funeral select').each(function(){
            formDataReceiptFuneral.push({ name: this.name, value: this.value});
        });
        $('#receipt-form-funeral #fraccionamiento_boolean_recibo').each(function(){
            let markedCheck = $(this).prop('checked');
            formDataReceiptFuneral.push({ name: this.name, value: markedCheck});
        });
        localStorage.setItem("formDataReceiptFuneral", JSON.stringify(formDataReceiptFuneral));
    }
    function getReceiptFuneral() {
        if(localStorage.formDataReceiptFuneral !== undefined){
            formDataReceiptFuneral = JSON.parse(localStorage.formDataReceiptFuneral);
            for (var i = 0; i < formDataReceiptFuneral.length; i++) {
                $(`[name=${formDataReceiptFuneral[i].name}]`).val(formDataReceiptFuneral[i].value);
                if ((formDataReceiptFuneral[i].name === 'fraccionamiento_boolean_recibo') && (formDataReceiptFuneral[i].value === true)) {
                    document.getElementById("fraccionamiento_boolean_recibo").checked = formDataReceiptFuneral[i].value;
                    document.getElementById("active-select-1").style.display = "inline";
                    document.getElementById("active-select-2").style.display = "inline";
                }
            }
        }
    }
</script>

<script>
    function storeValuesCommissionFuneral() {
        let formCommissionFuneral = [];
        localStorage.removeItem('formCommissionFuneral');
        $('#commission-form-funeral input[type=text]').each(function(){
            formCommissionFuneral.push({ name: this.name, value: this.value});
        });
        localStorage.setItem("formCommissionFuneral", JSON.stringify(formCommissionFuneral));
    }
    function getCommissionFuneral() {
        if(localStorage.formCommissionFuneral !== undefined){
            formCommissionFuneral = JSON.parse(localStorage.formCommissionFuneral);
            for (var i = 0; i < formCommissionFuneral.length; i++) {
                $(`[name=${formCommissionFuneral[i].name}]`).val(formCommissionFuneral[i].value);
            }
        }
    }
</script>

<!-- Poliza de Vida -->
<script>
    function storeValuesPolicyLife() {
        let formDataPolicyLife = [];
        localStorage.removeItem('formDataPolicyLife');
        $('#policy-form-life input[type=text]').each(function(){
            formDataPolicyLife.push({ name: this.name, value: this.value});
        });
        $('#policy-form-life input[type=email]').each(function(){
            formDataPolicyLife.push({ name: this.name, value: this.value});
        });
        $('#policy-form-life input[type=date]').each(function(){
            formDataPolicyLife.push({ name: this.name, value: this.value});
        });
        $('#policy-form-life select').each(function(){
            formDataPolicyLife.push({ name: this.name, value: this.value});
        });
        $('#policy-form-life #tomador_asegurado_poliza').each(function(){
            let markedCheck = $(this).prop('checked');
            formDataPolicyLife.push({ name: this.name, value: markedCheck});
        });
        localStorage.setItem("formDataPolicyLife", JSON.stringify(formDataPolicyLife));
    }
    function getPolicyLife() {
        if(localStorage.formDataPolicyLife !== undefined){
            formDataPolicyLife = JSON.parse(localStorage.formDataPolicyLife);
            for (var i = 0; i < formDataPolicyLife.length; i++) {
                $(`[name=${formDataPolicyLife[i].name}]`).val(formDataPolicyLife[i].value);
                if ((formDataPolicyLife[i].name === 'tomador_asegurado_poliza') && (formDataPolicyLife[i].value === true)) {
                    document.getElementById("tomador_asegurado_poliza").checked = formDataPolicyLife[i].value;
                }
                if ((formDataPolicyLife[i].name === 'tipo_canal_poliza') && (formDataPolicyLife[i].value === 'AGENTE PROPIO')) {
                    document.getElementById("searchList").style.display = "block";
                }
            }
        }
    }
</script>

<script>
    function storeValuesReceiptLife() {
        let formDataReceiptLife = [];
        localStorage.removeItem('formDataReceiptLife');
        $('#receipt-form-life input[type=text]').each(function(){
            formDataReceiptLife.push({ name: this.name, value: this.value});
        });
        $('#receipt-form-life input[type=number]').each(function(){
            formDataReceiptLife.push({ name: this.name, value: this.value});
        });
        $('#receipt-form-life input[type=date]').each(function(){
            formDataReceiptLife.push({ name: this.name, value: this.value});
        });
        $('#receipt-form-life select').each(function(){
            formDataReceiptLife.push({ name: this.name, value: this.value});
        });
        $('#receipt-form-life #fraccionamiento_boolean_recibo').each(function(){
            let markedCheck = $(this).prop('checked');
            formDataReceiptLife.push({ name: this.name, value: markedCheck});
        });
        localStorage.setItem("formDataReceiptLife", JSON.stringify(formDataReceiptLife));
    }
    function getReceiptLife() {
        if(localStorage.formDataReceiptLife !== undefined){
            formDataReceiptLife = JSON.parse(localStorage.formDataReceiptLife);
            for (var i = 0; i < formDataReceiptLife.length; i++) {
                $(`[name=${formDataReceiptLife[i].name}]`).val(formDataReceiptLife[i].value);
                if ((formDataReceiptLife[i].name === 'fraccionamiento_boolean_recibo') && (formDataReceiptLife[i].value === true)) {
                    document.getElementById("fraccionamiento_boolean_recibo").checked = formDataReceiptLife[i].value;
                    document.getElementById("active-select-1").style.display = "inline";
                    document.getElementById("active-select-2").style.display = "inline";
                }
            }
        }
    }
</script>

<script>
    function storeValuesCommissionLife() {
        let formCommissionLife = [];
        localStorage.removeItem('formCommissionLife');
        $('#commission-form-life input[type=text]').each(function(){
            formCommissionLife.push({ name: this.name, value: this.value});
        });
        localStorage.setItem("formCommissionLife", JSON.stringify(formCommissionLife));
    }
    function getCommissionLife() {
        if(localStorage.formCommissionLife !== undefined){
            formCommissionLife = JSON.parse(localStorage.formCommissionLife);
            for (var i = 0; i < formCommissionLife.length; i++) {
                $(`[name=${formCommissionLife[i].name}]`).val(formCommissionLife[i].value);
            }
        }
    }
</script>

<script>
    $(document).ready(function () {
        if ((document.getElementById("select_box").value === 'V') || (document.getElementById("select_box").value === 'E')) {
            var cleaveNumeral = new Cleave('.input-numeral', {
                numeral: true,
                numeralDecimalMark: ',',
                delimiter: '.',
                stripLeadingZeroes: false
            });
        } else {
            var cleaveNumeral = new Cleave('.input-numeral', {
                numeral: true,
                numeralDecimalMark: '!',
                delimiter: '',
                stripLeadingZeroes: false
            });
        }

        $('#select_box').change(function(){
            if ((this.value === 'V') || (this.value === 'E')) {
                var cleaveNumeral = new Cleave('.input-numeral', {
                    numeral: true,
                    numeralDecimalMark: ',',
                    delimiter: '.',
                    stripLeadingZeroes: false
                });
                cleaveNumeral.setRawValue('');
            } else {
                var cleaveNumeral = new Cleave('.input-numeral', {
                    numeral: true,
                    numeralDecimalMark: '!',
                    delimiter: '',
                    stripLeadingZeroes: false,
                });
                cleaveNumeral.setRawValue('');
            }
        });
        
        if ((document.getElementById("select_box2").value === 'V') || (document.getElementById("select_box2").value === 'E')) {
            var cleaveNumeral = new Cleave('.input-numeral2', {
                numeral: true,
                numeralDecimalMark: ',',
                delimiter: '.',
                stripLeadingZeroes: false
            });
        } else {
            var cleaveNumeral = new Cleave('.input-numeral2', {
                numeral: true,
                numeralDecimalMark: '!',
                delimiter: '',
                stripLeadingZeroes: false
            });
        }

        $('#select_box2').change(function(){
            if ((this.value === 'V') || (this.value === 'E')) {
                var cleaveNumeral = new Cleave('.input-numeral2', {
                    numeral: true,
                    numeralDecimalMark: ',',
                    delimiter: '.',
                    stripLeadingZeroes: false
                });
                cleaveNumeral.setRawValue('');
            } else {
                var cleaveNumeral = new Cleave('.input-numeral2', {
                    numeral: true,
                    numeralDecimalMark: '!',
                    delimiter: '',
                    stripLeadingZeroes: false
                });
                cleaveNumeral.setRawValue('');
            }
        });

        $('#fecha_desde_poliza').change(function () {
            var extraer = $('#fecha_desde_poliza').val();
            extraer = extraer.split('-');
            year = parseInt(extraer[0]);
            month = parseInt(extraer[1]) - 1;
            day = parseInt(extraer[2]);
            var fecha = moment([year, month, day]).add(1, 'years');
            fecha = fecha.toISOString().substring(0, 10);
            $('#fecha_hasta_poliza').val(fecha);
        });
        
        new Cleave('.input-numeral-cedula', {
            numeral: true,
            numeralDecimalMark: ',',
            delimiter: '.'
        });

        // Poliza Salud
        getPolicyHealth();
        getReceiptHealth();
        getCommissionHealth();

        // Poliza Vehiculo
        getPolicyVehicle();
        getExtraVehicle();
        getReceiptVehicle();
        getCommissionVehicle();

        // Poliza Funeral
        getPolicyFuneral();
        getReceiptFuneral();
        getCommissionFuneral();

        // Poliza Vida
        getPolicyLife();
        getReceiptLife();
        getCommissionLife();
    });
</script>

<script>
    window.addEventListener("load", function() {
        document.getElementById("radioContainer").addEventListener("click", function() {
            document.getElementById("active-select-1").style.display = document.getElementById("fraccionamiento_boolean_recibo").checked ? "inline" : "none";
            document.getElementById("active-select-2").style.display = document.getElementById("fraccionamiento_boolean_recibo").checked ? "inline" : "none";
        });
    });
</script>

<script>
    window.addEventListener("load", function() {
        document.getElementById("radioContainer2").addEventListener("click", function() {
            document.getElementById("active-select-3").style.display = document.getElementById("blindaje_boolean_vehiculo").checked ? "inline" : "none";
            document.getElementById("active-select-4").style.display = document.getElementById("blindaje_boolean_vehiculo").checked ? "inline" : "none";
        });
    });
</script>

<script>
    var naturalInsureds = <%- JSON.stringify(naturalInsureds) %>;
    var legalInsureds = <%- JSON.stringify(legalInsureds) %>;
    function pasarNombreTomador() {
        var idRif = document.getElementById("id_rif_tomador").value;
        var selectBox = document.getElementById("select_box").value;
        var checkboxTomadorViejo = document.getElementById("tomador_asegurado_poliza").checked;
        if ((selectBox === 'J') || (selectBox === 'G') || (selectBox === 'I') || (selectBox === 'F')) {
            for (let i = 0; i < legalInsureds.length; i++) {
                let elementLegalInsured = legalInsureds[i];
                if ((selectBox === elementLegalInsured.tipo_rif_asegurado_per_jur) && (idRif === elementLegalInsured.rif_asegurado_per_jur)) {
                    document.getElementById("correo_tomador").value = elementLegalInsured.correo_asegurado_per_jur;
                    document.getElementById("nombre_tomador_poliza").value = elementLegalInsured.razon_social_per_jur;
                    if (checkboxTomadorViejo === true) {
                        document.getElementById("select_box2").value = elementLegalInsured.tipo_rif_asegurado_per_jur;
                        document.getElementById("id_rif_asegurado").value = elementLegalInsured.rif_asegurado_per_jur;
                        document.getElementById("correo_asegurado").value = elementLegalInsured.correo_asegurado_per_jur;
                        document.getElementById("nombre_asegurado").value = elementLegalInsured.razon_social_per_jur;
                    } else {
                        document.getElementById("select_box2").value = 'V';
                        document.getElementById("id_rif_asegurado").value = ''
                        document.getElementById("correo_asegurado").value = '';
                        document.getElementById("nombre_asegurado").value = '';
                    }
                    break;
                } else {
                    document.getElementById("correo_tomador").value = '';
                    document.getElementById("nombre_tomador_poliza").value = '';
                }
            }
        } else {
            for (let i = 0; i < naturalInsureds.length; i++) {
                let elementNaturalInsured = naturalInsureds[i];
                if (idRif.match(/^\d/)) {
                    if ((selectBox === elementNaturalInsured.tipo_cedula_asegurado_per_nat) && (idRif === elementNaturalInsured.cedula_asegurado_per_nat)) {
                        document.getElementById("correo_tomador").value = elementNaturalInsured.correo_asegurado_per_nat;
                        document.getElementById("nombre_tomador_poliza").value = elementNaturalInsured.nombre_asegurado_per_nat + ' ' + elementNaturalInsured.apellido_asegurado_per_nat;
                        if (checkboxTomadorViejo === true) {
                            document.getElementById("select_box2").value = elementNaturalInsured.tipo_cedula_asegurado_per_nat;
                            document.getElementById("id_rif_asegurado").value = elementNaturalInsured.cedula_asegurado_per_nat;
                            document.getElementById("correo_asegurado").value = elementNaturalInsured.correo_asegurado_per_nat;
                            document.getElementById("nombre_asegurado").value = elementNaturalInsured.nombre_asegurado_per_nat + ' ' + elementNaturalInsured.apellido_asegurado_per_nat;
                        } else {
                            document.getElementById("select_box2").value = 'V';
                            document.getElementById("id_rif_asegurado").value = ''
                            document.getElementById("correo_asegurado").value = '';
                            document.getElementById("nombre_asegurado").value = '';
                        }
                        break;
                    } else {
                        document.getElementById("correo_tomador").value = '';
                        document.getElementById("nombre_tomador_poliza").value = '';
                    }
                } else if (idRif.startsWith('')) {
                    document.getElementById("correo_tomador").value = '';
                    document.getElementById("nombre_tomador_poliza").value = '';
                }
            }
        }
    }
</script>

<script>
    var naturalInsureds = <%- JSON.stringify(naturalInsureds) %>;
    var legalInsureds = <%- JSON.stringify(legalInsureds) %>;
    function pasarNombreAsegurado() {
        var idRif = document.getElementById("id_rif_asegurado").value;
        var selectBox2 = document.getElementById("select_box2").value;
        if ((selectBox2 === 'J') || (selectBox2 === 'G') || (selectBox2 === 'I') || (selectBox2 === 'F')) {
            for (let i = 0; i < legalInsureds.length; i++) {
                let elementLegalInsured = legalInsureds[i];
                if ((selectBox2 === elementLegalInsured.tipo_rif_asegurado_per_jur) && (idRif === elementLegalInsured.rif_asegurado_per_jur)) {
                    document.getElementById("correo_asegurado").value = elementLegalInsured.correo_asegurado_per_jur;
                    document.getElementById("nombre_asegurado").value = elementLegalInsured.razon_social_per_jur;
                    break;
                } else {
                    document.getElementById("correo_asegurado").value = '';
                    document.getElementById("nombre_asegurado").value = '';
                }
            }
        } else {
            for (let i = 0; i < naturalInsureds.length; i++) {
                let elementNaturalInsured = naturalInsureds[i];
                if (idRif.match(/^\d/)) {
                    if ((selectBox2 === elementNaturalInsured.tipo_cedula_asegurado_per_nat) && (idRif === elementNaturalInsured.cedula_asegurado_per_nat)) {
                        document.getElementById("correo_asegurado").value = elementNaturalInsured.correo_asegurado_per_nat;
                        document.getElementById("nombre_asegurado").value = elementNaturalInsured.nombre_asegurado_per_nat + ' ' + elementNaturalInsured.apellido_asegurado_per_nat;
                        break;
                    } else {
                        document.getElementById("correo_asegurado").value = '';
                        document.getElementById("nombre_asegurado").value = '';
                    }
                } else if (idRif.startsWith('')) {
                    document.getElementById("correo_asegurado").value = '';
                    document.getElementById("nombre_asegurado").value = '';
                }
            }
        }
    }
</script>

<script>
    var naturalInsureds = <%- JSON.stringify(naturalInsureds) %>;
    function pasarNombreAseguradoConductor() {
        var cedulaConductor = document.getElementById("cedula_conductor").value;
        var selectBox3 = document.getElementById("select_box3").value;
        for (let i = 0; i < naturalInsureds.length; i++) {
            let elementNaturalInsured = naturalInsureds[i];
            if (cedulaConductor.match(/^\d/)) {
                if ((selectBox3 === elementNaturalInsured.tipo_cedula_asegurado_per_nat) && (cedulaConductor === elementNaturalInsured.cedula_asegurado_per_nat)) {
                    document.getElementById("nombre_conductor_vehiculo").value = elementNaturalInsured.nombre_asegurado_per_nat + ' ' + elementNaturalInsured.apellido_asegurado_per_nat;
                    break;
                } else {
                    document.getElementById("nombre_conductor_vehiculo").value = '';
                }
            } else if (cedulaConductor.startsWith('')) {
                document.getElementById("nombre_conductor_vehiculo").value = '';
            }
        }
    }
</script>


<script>
    function showInput() {
        var getSelectValue = document.getElementById("maternidad_poliza").value;
        if (getSelectValue === 'SÍ') {
            document.getElementById("searchinput").style.display = "block";
        } else if (getSelectValue === 'NO') {
            document.getElementById("tipo_cobertura_poliza").value = '';
            document.getElementById("searchinput").style.display = "none";
        }
    }   
</script>

<script>
    function showInput2() {
        var getSelectValue = document.getElementById("plazo_espera_poliza").value;
        if (getSelectValue === 'SÍ') {
            document.getElementById("searchinput2").style.display = "block";
        } else if (getSelectValue === 'NO') {
            document.getElementById("detalle_cliente_poliza").value = '';
            document.getElementById("searchinput2").style.display = "none";
        }
    }
</script>

<script>
    function showList() {
        var getSelectValue = document.getElementById("tipo_canal_poliza").value;
        if (getSelectValue === 'AGENTE PROPIO') {
            document.getElementById("searchList").style.display = "block";
        } else {
            document.getElementById("nombre_agentes_propios").value = '';
            document.getElementById("searchList").style.display = "none";
        }
    }
</script>

<script>
    function currencySignChange() {
        let coinType = document.getElementById("tipo_moneda_poliza").value;
        if (coinType === 'BOLÍVAR') {
            $('.currency_format').toArray().forEach(function(field) {
                new Cleave(field, {
                    numeral: true,
                    numeralDecimalMark: ',',
                    delimiter: '.',
                    prefix: 'Bs ',
                });
            });
        } else if (coinType === 'DÓLAR') {
            $('.currency_format').toArray().forEach(function(field) {
                new Cleave(field, {
                    numeral: true,
                    numeralDecimalMark: ',',
                    delimiter: '.',
                    prefix: '$ ',
                });
            });
        } else if (coinType === 'EUROS') {
            $('.currency_format').toArray().forEach(function(field) {
                new Cleave(field, {
                    numeral: true,
                    numeralDecimalMark: ',',
                    delimiter: '.',
                    prefix: '€ ',
                });
            });
        }
    }   
</script>

<% if (typeof(policy) !== 'undefined') { %>
    <script>
        var policy = <%- JSON.stringify(policy) %>;
        function premiumCalculationDate() {
            var getSelectValue = document.getElementById("tipo_fraccionamiento_recibo").value;
            var checkboxDivision = document.getElementById("fraccionamiento_boolean_recibo").checked;
            if (getSelectValue === 'MENSUAL') {
                $(document).ready(function () {
                    $('#tipo_fraccionamiento_recibo').change(function () {
                        var extraer = $('#fecha_desde_recibo').val();
                        extraer = extraer.split('-');
                        year = parseInt(extraer[0]);
                        month = parseInt(extraer[1]) - 1;
                        day = parseInt(extraer[2]);
                        var fecha = moment([year, month, day]).add(1, 'months');
                        fecha = fecha.toISOString().substring(0, 10);
                        $('#fecha_pago_recibo').val(fecha);
                    });
                });
                $(document).ready(function () {
                    $('#fecha_desde_recibo').change(function () {
                        var extraer = $('#fecha_desde_recibo').val();
                        extraer = extraer.split('-');
                        year = parseInt(extraer[0]);
                        month = parseInt(extraer[1]) - 1;
                        day = parseInt(extraer[2]);
                        var fecha = moment([year, month, day]).add(1, 'months');
                        fecha = fecha.toISOString().substring(0, 10);
                        $('#fecha_hasta_recibo').val(fecha);
                    });
                });
                var numberMonthly = document.getElementById("numero_pago_recibo").value;
                if ((numberMonthly === '') || (numberMonthly === '0')) {
                    numberMonthly = 1;
                }
                var premiumMonthly = policy.prima_anual_poliza / numberMonthly;
                premiumMonthly = String(premiumMonthly);
                if (policy.tipo_moneda_poliza === 'BOLÍVAR') {
                    let cleave = new Cleave("#monto_prima_recibo", {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: 'Bs ',
                    });
                    cleave.setRawValue(premiumMonthly);
                } else if (policy.tipo_moneda_poliza === 'DÓLAR') {
                    let cleave = new Cleave("#monto_prima_recibo", {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: '$ ',
                    });
                    cleave.setRawValue(premiumMonthly);
                } else if (policy.tipo_moneda_poliza === 'EUROS') {
                    let cleave = new Cleave("#monto_prima_recibo", {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: '€ ',
                    });
                    cleave.setRawValue(premiumMonthly);
                }
            } else if (getSelectValue === 'BIMESTRAL') {
                $(document).ready(function () {
                    $('#tipo_fraccionamiento_recibo').change(function () {
                        var extraer = $('#fecha_desde_recibo').val();
                        extraer = extraer.split('-');
                        year = parseInt(extraer[0]);
                        month = parseInt(extraer[1]) - 1;
                        day = parseInt(extraer[2]);
                        var fecha = moment([year, month, day]).add(2, 'months');
                        fecha = fecha.toISOString().substring(0, 10);
                        $('#fecha_pago_recibo').val(fecha);
                    });
                });
                $(document).ready(function () {
                    $('#fecha_desde_recibo').change(function () {
                        var extraer = $('#fecha_desde_recibo').val();
                        extraer = extraer.split('-');
                        year = parseInt(extraer[0]);
                        month = parseInt(extraer[1]) - 1;
                        day = parseInt(extraer[2]);
                        var fecha = moment([year, month, day]).add(2, 'months');
                        fecha = fecha.toISOString().substring(0, 10);
                        $('#fecha_hasta_recibo').val(fecha);
                    });
                });
                var premiumBimonthly = policy.prima_anual_poliza / 6;
                premiumBimonthly = String(premiumBimonthly);
                document.getElementById("numero_pago_recibo").value = 6;
                if (policy.tipo_moneda_poliza === 'BOLÍVAR') {
                    let cleave = new Cleave("#monto_prima_recibo", {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: 'Bs ',
                    });
                    cleave.setRawValue(premiumBimonthly);
                } else if (policy.tipo_moneda_poliza === 'DÓLAR') {
                    let cleave = new Cleave("#monto_prima_recibo", {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: '$ ',
                    });
                    cleave.setRawValue(premiumBimonthly);
                } else if (policy.tipo_moneda_poliza === 'EUROS') {
                    let cleave = new Cleave("#monto_prima_recibo", {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: '€ ',
                    });
                    cleave.setRawValue(premiumBimonthly);
                }
            } else if (getSelectValue === 'TRIMESTRAL') {
                $(document).ready(function () {
                    $('#tipo_fraccionamiento_recibo').change(function () {
                        var extraer = $('#fecha_desde_recibo').val();
                        extraer = extraer.split('-');
                        year = parseInt(extraer[0]);
                        month = parseInt(extraer[1]) - 1;
                        day = parseInt(extraer[2]);
                        var fecha = moment([year, month, day]).add(3, 'months');
                        fecha = fecha.toISOString().substring(0, 10);
                        $('#fecha_pago_recibo').val(fecha);
                    });
                });
                $(document).ready(function () {
                    $('#fecha_desde_recibo').change(function () {
                        var extraer = $('#fecha_desde_recibo').val();
                        extraer = extraer.split('-');
                        year = parseInt(extraer[0]);
                        month = parseInt(extraer[1]) - 1;
                        day = parseInt(extraer[2]);
                        var fecha = moment([year, month, day]).add(3, 'months');
                        fecha = fecha.toISOString().substring(0, 10);
                        $('#fecha_hasta_recibo').val(fecha);
                    });
                });
                var premiumQuarterly = policy.prima_anual_poliza / 4;
                premiumQuarterly = String(premiumQuarterly);
                document.getElementById("numero_pago_recibo").value = 4;
                if (policy.tipo_moneda_poliza === 'BOLÍVAR') {
                    let cleave = new Cleave("#monto_prima_recibo", {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: 'Bs ',
                    });
                    cleave.setRawValue(premiumQuarterly);
                } else if (policy.tipo_moneda_poliza === 'DÓLAR') {
                    let cleave = new Cleave("#monto_prima_recibo", {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: '$ ',
                    });
                    cleave.setRawValue(premiumQuarterly);
                } else if (policy.tipo_moneda_poliza === 'EUROS') {
                    let cleave = new Cleave("#monto_prima_recibo", {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: '€ ',
                    });
                    cleave.setRawValue(premiumQuarterly);
                }
            } else if (getSelectValue === 'SEMESTRAL') {
                $(document).ready(function () {
                    $('#tipo_fraccionamiento_recibo').change(function () {
                        var extraer = $('#fecha_desde_recibo').val();
                        extraer = extraer.split('-');
                        year = parseInt(extraer[0]);
                        month = parseInt(extraer[1]) - 1;
                        day = parseInt(extraer[2]);
                        var fecha = moment([year, month, day]).add(6, 'months');
                        fecha = fecha.toISOString().substring(0, 10);
                        $('#fecha_pago_recibo').val(fecha);
                    });
                });
                $(document).ready(function () {
                    $('#fecha_desde_recibo').change(function () {
                        var extraer = $('#fecha_desde_recibo').val();
                        extraer = extraer.split('-');
                        year = parseInt(extraer[0]);
                        month = parseInt(extraer[1]) - 1;
                        day = parseInt(extraer[2]);
                        var fecha = moment([year, month, day]).add(6, 'months');
                        fecha = fecha.toISOString().substring(0, 10);
                        $('#fecha_hasta_recibo').val(fecha);
                    });
                });
                var premiumBiannual = policy.prima_anual_poliza / 2;
                premiumBiannual = String(premiumBiannual);
                document.getElementById("numero_pago_recibo").value = 2;
                if (policy.tipo_moneda_poliza === 'BOLÍVAR') {
                    let cleave = new Cleave("#monto_prima_recibo", {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: 'Bs ',
                    });
                    cleave.setRawValue(premiumBiannual);
                } else if (policy.tipo_moneda_poliza === 'DÓLAR') {
                    let cleave = new Cleave("#monto_prima_recibo", {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: '$ ',
                    });
                    cleave.setRawValue(premiumBiannual);
                } else if (policy.tipo_moneda_poliza === 'EUROS') {
                    let cleave = new Cleave("#monto_prima_recibo", {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: '€ ',
                    });
                    cleave.setRawValue(premiumBiannual);
                }
            }  else if (getSelectValue === 'ANUAL') {
                $(document).ready(function () {
                    $('#tipo_fraccionamiento_recibo').change(function () {
                        var extraer = $('#fecha_desde_recibo').val();
                        extraer = extraer.split('-');
                        year = parseInt(extraer[0]);
                        month = parseInt(extraer[1]) - 1;
                        day = parseInt(extraer[2]);
                        var fecha = moment([year, month, day]).add(1, 'years');
                        fecha = fecha.toISOString().substring(0, 10);
                        $('#fecha_pago_recibo').val(fecha);
                    });
                });
                $(document).ready(function () {
                    $('#fecha_desde_recibo').change(function () {
                        var extraer = $('#fecha_desde_recibo').val();
                        extraer = extraer.split('-');
                        year = parseInt(extraer[0]);
                        month = parseInt(extraer[1]) - 1;
                        day = parseInt(extraer[2]);
                        var fecha = moment([year, month, day]).add(1, 'years');
                        fecha = fecha.toISOString().substring(0, 10);
                        $('#fecha_hasta_recibo').val(fecha);
                    });
                });
                var annualPremium = policy.prima_anual_poliza / 1;
                annualPremium = String(annualPremium);
                document.getElementById("numero_pago_recibo").value = 1;
                if (policy.tipo_moneda_poliza === 'BOLÍVAR') {
                    let cleave = new Cleave("#monto_prima_recibo", {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: 'Bs ',
                    });
                    cleave.setRawValue(annualPremium);
                } else if (policy.tipo_moneda_poliza === 'DÓLAR') {
                    let cleave = new Cleave("#monto_prima_recibo", {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: '$ ',
                    });
                    cleave.setRawValue(annualPremium);
                } else if (policy.tipo_moneda_poliza === 'EUROS') {
                    let cleave = new Cleave("#monto_prima_recibo", {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: '€ ',
                    });
                    cleave.setRawValue(annualPremium);
                }
            }
            if (checkboxDivision === false) {
                if (policy.tipo_moneda_poliza === 'BOLÍVAR') {
                    let cleave = new Cleave("#monto_prima_recibo", {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: 'Bs ',
                    });
                    cleave.setRawValue(String(policy.prima_anual_poliza));
                } else if (policy.tipo_moneda_poliza === 'DÓLAR') {
                    let cleave = new Cleave("#monto_prima_recibo", {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: '$ ',
                    });
                    cleave.setRawValue(String(policy.prima_anual_poliza));
                } else if (policy.tipo_moneda_poliza === 'EUROS') {
                    let cleave = new Cleave("#monto_prima_recibo", {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: '€ ',
                    });
                    cleave.setRawValue(String(policy.prima_anual_poliza));
                }
                document.getElementById("numero_pago_recibo").value = 0;
                document.getElementById("tipo_fraccionamiento_recibo").value = '';
                document.getElementById("fecha_pago_recibo").value = '';
                document.getElementById("fecha_desde_recibo").value = '';
                document.getElementById("fecha_hasta_recibo").value = '';
            }
        }
    </script>

    <script>
        var policy = <%- JSON.stringify(policy) %>;
        window.onload = function() {
            if (policy.tipo_moneda_poliza === 'BOLÍVAR') {
                $('.currency_format_number').toArray().forEach(function(field) {
                    new Cleave(field, {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: 'Bs ',
                    });
                });
            } else if (policy.tipo_moneda_poliza === 'DÓLAR') {
                $('.currency_format_number').toArray().forEach(function(field) {
                    new Cleave(field, {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: '$ ',
                    });
                });
            } else if (policy.tipo_moneda_poliza === 'EUROS') {
                $('.currency_format_number').toArray().forEach(function(field) {
                    new Cleave(field, {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: '€ ',
                    });
                });
            }
        }   
    </script>
<% } %>

<% if (typeof(data) !== 'undefined') { %>
    <script>
        var lista = <%- JSON.stringify(data) %>;
        var tablaBeneficiarioSalud = null;
        $(document).ready(function(){
            tablaBeneficiarioSalud = $('#tablaBeneficiariosSalud').DataTable({
                pageLength: 25,
                responsive: true,
                dom: '<"html5buttons"B>lTfgitp',
                processing: true,
                serverSide: false,
                columns: [
                    {"data": "nombre_beneficiario"},
                    {"data": "apellido_beneficiario"},
                    {"data": "parentesco_beneficiario"},
                    {
                        "data": "",
                        "render": (data, type, row) => {
                                return `<form class="form-inline" method="post" action="/sistema/remove-health-beneficiary/${row.id_beneficiario}">
                                            <div class="row">
                                                <div class="col-sm-6 col-lg-12" style="padding-bottom: 10px;">
                                                    <button 
                                                        class="btn btn-danger" 
                                                        type="submit"
                                                        onclick="return confirm('¿Estás seguro de que quieres deshabilitar este registro?');"
                                                    >
                                                        <i class="fa fa-ban"></i>
                                                    </button>
                                                </div> 
                                                <div class="col-sm-6 col-lg-12">
                                                    <textarea 
                                                        name="obser_deshabilitar_beneficiario"
                                                        id="obser_deshabilitar_beneficiario" 
                                                        placeholder="Observaciones de Deshabilitar *" 
                                                        class="form-control"
                                                        oninput="let p=this.selectionStart;this.value=this.value.toUpperCase();this.setSelectionRange(p, p);"
                                                    ></textarea>
                                                </div>
                                            </div>
                                        </form>`;
                        }
                    }
                ],
                buttons: [
                    {
                        extend: 'print',
                        customize: function (win){
                            $(win.document.body).addClass('white-bg');
                            $(win.document.body).css('font-size', '10px');
                            $(win.document.body).find('table')
                                    .addClass('compact')
                                    .css('font-size', 'inherit');
                        },
                        text: 'Imprimir'
                    }
                ],
                language: {
                    "decimal": "",
                    "emptyTable": "No hay información",
                    "info": "Mostrando _START_ a _END_ de _TOTAL_ Entradas",
                    "infoEmpty": "Mostrando 0 to 0 of 0 Entradas",
                    "infoFiltered": "(Filtrado de _MAX_ total entradas)",
                    "infoPostFix": "",
                    "thousands": ".",
                    "lengthMenu": "Mostrar _MENU_ Entradas",
                    "loadingRecords": "Cargando...",
                    "processing": "Procesando...",
                    "search": "Buscar:",
                    "zeroRecords": "Sin resultados encontrados",
                    "paginate": {
                        "first": "Primero",
                        "last": "Último",
                        "next": "Siguiente",
                        "previous": "Anterior"
                    }
                }
            });
            tablaBeneficiarioSalud.rows.add(lista);
            tablaBeneficiarioSalud.draw();
        });
    </script>

    <script>
        var lista = <%- JSON.stringify(data) %>;
        var tablaBeneficiarioFunerario = null;
        $(document).ready(function(){
            tablaBeneficiarioFunerario = $('#tablaBeneficiariosFunerario').DataTable({
                pageLength: 25,
                responsive: true,
                dom: '<"html5buttons"B>lTfgitp',
                processing: true,
                serverSide: false,
                columns: [
                    {"data": "nombre_beneficiario"},
                    {"data": "apellido_beneficiario"},
                    {"data": "parentesco_beneficiario"},
                    {
                        "data": "",
                        "render": (data, type, row) => {
                                return `<form class="form-inline" method="post" action="/sistema/remove-funeral-beneficiary/${row.id_beneficiario}">
                                            <div class="row">
                                                <div class="col-sm-6 col-lg-12" style="padding-bottom: 10px;">
                                                    <button 
                                                        class="btn btn-danger" 
                                                        type="submit"
                                                        onclick="return confirm('¿Estás seguro de que quieres deshabilitar este registro?');"
                                                    >
                                                        <i class="fa fa-ban"></i>
                                                    </button>
                                                </div> 
                                                <div class="col-sm-6 col-lg-12">
                                                    <textarea 
                                                        name="obser_deshabilitar_beneficiario"
                                                        id="obser_deshabilitar_beneficiario" 
                                                        placeholder="Observaciones de Deshabilitar *" 
                                                        class="form-control"
                                                        oninput="let p=this.selectionStart;this.value=this.value.toUpperCase();this.setSelectionRange(p, p);"
                                                    ></textarea>
                                                </div>
                                            </div>
                                        </form>`;
                        }
                    }
                ],
                buttons: [
                    {
                        extend: 'print',
                        customize: function (win){
                            $(win.document.body).addClass('white-bg');
                            $(win.document.body).css('font-size', '10px');
                            $(win.document.body).find('table')
                                    .addClass('compact')
                                    .css('font-size', 'inherit');
                        },
                        text: 'Imprimir'
                    }
                ],
                language: {
                    "decimal": "",
                    "emptyTable": "No hay información",
                    "info": "Mostrando _START_ a _END_ de _TOTAL_ Entradas",
                    "infoEmpty": "Mostrando 0 to 0 of 0 Entradas",
                    "infoFiltered": "(Filtrado de _MAX_ total entradas)",
                    "infoPostFix": "",
                    "thousands": ".",
                    "lengthMenu": "Mostrar _MENU_ Entradas",
                    "loadingRecords": "Cargando...",
                    "processing": "Procesando...",
                    "search": "Buscar:",
                    "zeroRecords": "Sin resultados encontrados",
                    "paginate": {
                        "first": "Primero",
                        "last": "Último",
                        "next": "Siguiente",
                        "previous": "Anterior"
                    }
                }
            });
            tablaBeneficiarioFunerario.rows.add(lista);
            tablaBeneficiarioFunerario.draw();
        });
    </script>

    <script>
        var lista = <%- JSON.stringify(data) %>;
        var tablaBeneficiarioVida = null;
        $(document).ready(function(){
            tablaBeneficiarioVida = $('#tablaBeneficiariosVida').DataTable({
                pageLength: 25,
                responsive: true,
                dom: '<"html5buttons"B>lTfgitp',
                processing: true,
                serverSide: false,
                columns: [
                    {"data": "nombre_beneficiario"},
                    {"data": "apellido_beneficiario"},
                    {"data": "parentesco_beneficiario"},
                    {
                        "data": "",
                        "render": (data, type, row) => {
                                return `<form class="form-inline" method="post" action="/sistema/remove-life-beneficiary/${row.id_beneficiario}">
                                            <div class="row">
                                                <div class="col-sm-6 col-lg-12" style="padding-bottom: 10px;">
                                                    <button 
                                                        class="btn btn-danger" 
                                                        type="submit"
                                                        onclick="return confirm('¿Estás seguro de que quieres deshabilitar este registro?');"
                                                    >
                                                        <i class="fa fa-ban"></i>
                                                    </button>
                                                </div> 
                                                <div class="col-sm-6 col-lg-12">
                                                    <textarea 
                                                        name="obser_deshabilitar_beneficiario"
                                                        id="obser_deshabilitar_beneficiario" 
                                                        placeholder="Observaciones de Deshabilitar *" 
                                                        class="form-control"
                                                        oninput="let p=this.selectionStart;this.value=this.value.toUpperCase();this.setSelectionRange(p, p);"
                                                    ></textarea>
                                                </div>
                                            </div>
                                        </form>`;
                        }
                    }
                ],
                buttons: [
                    {
                        extend: 'print',
                        customize: function (win){
                            $(win.document.body).addClass('white-bg');
                            $(win.document.body).css('font-size', '10px');
                            $(win.document.body).find('table')
                                    .addClass('compact')
                                    .css('font-size', 'inherit');
                        },
                        text: 'Imprimir'
                    }
                ],
                language: {
                    "decimal": "",
                    "emptyTable": "No hay información",
                    "info": "Mostrando _START_ a _END_ de _TOTAL_ Entradas",
                    "infoEmpty": "Mostrando 0 to 0 of 0 Entradas",
                    "infoFiltered": "(Filtrado de _MAX_ total entradas)",
                    "infoPostFix": "",
                    "thousands": ".",
                    "lengthMenu": "Mostrar _MENU_ Entradas",
                    "loadingRecords": "Cargando...",
                    "processing": "Procesando...",
                    "search": "Buscar:",
                    "zeroRecords": "Sin resultados encontrados",
                    "paginate": {
                        "first": "Primero",
                        "last": "Último",
                        "next": "Siguiente",
                        "previous": "Anterior"
                    }
                }
            });
            tablaBeneficiarioVida.rows.add(lista);
            tablaBeneficiarioVida.draw();
        });
    </script>
<% } %>

</body>

</html>