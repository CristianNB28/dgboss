        <div class="footer">
            
        </div>
    </div>
</div>



<!-- Mainly scripts -->
<script src="/js/jquery-3.1.1.min.js"></script>
<script src="/js/jquery-2.1.1.js"></script>
<script src="/js/popper.min.js"></script>
<script src="/js/bootstrap.js"></script>
<script src="/js/plugins/metisMenu/jquery.metisMenu.js"></script>
<script src="/js/plugins/slimscroll/jquery.slimscroll.min.js"></script>

<!-- Custom and plugin javascript -->
<script src="/js/inspinia.js"></script>
<script src="/js/plugins/pace/pace.min.js"></script>

<!-- Steps -->
<script src="/js/plugins/steps/jquery.steps.min.js"></script>

<!-- Jquery Validate -->
<script src="/js/plugins/validate/jquery.validate.min.js"></script>

<script src="/js/plugins/jquery.cookie/jquery.cookie.js"></script>

<script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script src="/js/moment.js"></script>

<script src="/js/cleave-js/cleave.min.js"></script>

<script src="/js/select2/js/select2.min.js"></script>

<script>
    var collectives = <%- JSON.stringify(collectives) %>;
    var receipts = <%- JSON.stringify(receipts) %>;
    $.extend($.validator.messages, {
        required: "Este campo es obligatorio",
        remote: "Por favor, rellena este campo",
        email: "Por favor, escribe una dirección de correo válida",
        url: "Por favor, escribe una URL válida",
        date: "Por favor, escribe una fecha válida",
        dateISO: "Por favor, escribe una fecha (ISO) válida",
        number: "Por favor, escribe un número entero válido",
        digits: "Por favor, escribe sólo dígitos",
        creditcard: "Por favor, escribe un número de tarjeta válido",
        equalTo: "Por favor, escribe el mismo valor de nuevo",
        accept: "Por favor, escribe un valor con una extensión aceptada",
        maxlength: $.validator.format("Por favor, no escribas más de {0} caracteres"),
        minlength: $.validator.format("Por favor, no escribas menos de {0} caracteres"),
        rangelength: $.validator.format("Por favor, escribe un valor entre {0} y {1} caracteres"),
        range: $.validator.format("Por favor, escribe un valor entre {0} y {1}"),
        max: $.validator.format("Por favor, escribe un valor menor o igual a {0}"),
        min: $.validator.format("Por favor, escribe un valor mayor o igual a {0}"),
        step: $.validator.format("Por favor, escribe un múltiplo de {0}")
    });
    function esRepetidoNumColectivo(value, element, param) {
        let numberCollective = document.getElementById("numero_colectivo").value
        const even = (collective) => collective.numero_colectivo === numberCollective;
        if (collectives.some(even) === true) {
            return false;
        } else {
            return true;
        }
    }
    function esRepetidoNumRecibo(value, element, param) {
        let numberReceipt = document.getElementById("numero_recibo").value
        const even = (receipt) => receipt.numero_recibo === numberReceipt;
        if (receipts.some(even) === true) {
            return false;
        } else {
            return true;
        }
    }
    $.validator.addMethod("esrepetidonumcolectivo", esRepetidoNumColectivo, "Se repite el número de colectivo");
    $.validator.addMethod("esrepetidonumrecibo", esRepetidoNumRecibo, "Se repite el número de recibo");
    $(document).ready(function(){
        $("#wizard").steps();
        $("#form-health-collective").steps({
            headerTag: "h1",
            bodyTag: "fieldset",
            titleTemplate:"<span class='text'></span> #title#",
            saveState: true,
            labels: {
                cancel: "Cancelar",
                current: "current step:",
                pagination: "Pagination",
                finish: "Cerrar",
                next: "Siguiente",
                previous: "Anterior",
                loading: "Cargando ..."
            },
            onStepChanging: (event, currentIndex, newIndex) => {
                if (currentIndex > newIndex)
                {
                    return true;
                }
                if (newIndex === 5)
                {
                    return false;
                }
                if (newIndex === 1) {
                    $("#policy-form").validate().settings.ignore = ":disabled,:hidden";
                    return $("#policy-form").valid();
                } else if (newIndex === 2) {
                    $('#extra-form').validate().settings.ignore = ":disabled,:hidden";
                    return $('#extra-form').valid();
                } else if (newIndex === 3) {
                    $('#receipt-form').validate().settings.ignore = ":disabled,:hidden";
                    return $('#receipt-form').valid();
                } else if (newIndex === 4) {
                    $('#commission-form').validate().settings.ignore = ":disabled,:hidden";
                    return $('#commission-form').valid();
                }
            },
            onStepChanged: (event, currentIndex, priorIndex) => {
                if (currentIndex === 1) {
                    $('#policy-form').submit();
                } else if (currentIndex === 2) {
                    $('#extra-form').submit();
                } else if (currentIndex === 3) {
                    $('#receipt-form').submit();
                } else if (currentIndex === 4) {
                    $('#commission-form').submit();
                }
            },
            onFinishing:(event, currentIndex) => {
                $('#verification-form').validate().settings.ignore = ":disabled";
                return $('#verification-form').valid();
            },
            onFinished: (a) => {
                $('#form-health-collective .steps a:eq(0)').click();
                $('#form-health-collective').hide();
                $('#verification-form').submit();
            }
        });
        $().ready(function () {
            $("#policy-form").validate({
                rules: {
                    numero_colectivo: {
                        esrepetidonumcolectivo: true
                    }
                }
            });
        });
        $().ready(function () {
            $("#receipt-form").validate({
                rules: {
                    numero_recibo: {
                        esrepetidonumrecibo: true
                    }
                }
            });
        });
        $("#policy-form").on('keyup','.cedula_rif',function(){
            var separador = $(this);
            for (var i = 0 ; i < separador.length; i++) {
                separador[i].addEventListener('input', (e) => {
                    var entrada = e.target.value.split(',');
                    var parteEntera = entrada[0].replace(/\./g, '');
                    var salida = parteEntera.replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1.");
                    if ((salida.charAt(0) === 'J') || (salida.charAt(0) === 'G') || (salida.charAt(0) === 'V')) {
                        var parteRif = entrada[0];
                        e.target.value = parteRif;
                    } else {
                        e.target.value = salida;
                    }
                }, false); 
            }    
        });
        $("#commission-form").on('keyup','.number_format',function(){
            var separador = $(this);
            for (var i = 0 ; i < separador.length; i++) {
                separador[i].addEventListener('input', (e) => {
                    var entrada = e.target.value.split(','),
                    parteEntera = entrada[0].replace(/\./g, ''),
                    parteDecimal = entrada[1],
                    salida = parteEntera.replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1.");
                    e.target.value = salida + (parteDecimal !== undefined ? ',' + parteDecimal.replace(/([0-9])([0-9]{2})$/,'') : '');
                }, false); 
            }    
        });
    });
</script>

<script>
    $.extend($.validator.messages, {
        required: "Este campo es obligatorio",
        remote: "Por favor, rellena este campo",
        email: "Por favor, escribe una dirección de correo válida",
        url: "Por favor, escribe una URL válida",
        date: "Por favor, escribe una fecha válida",
        dateISO: "Por favor, escribe una fecha (ISO) válida",
        number: "Por favor, escribe un número entero válido",
        digits: "Por favor, escribe sólo dígitos",
        creditcard: "Por favor, escribe un número de tarjeta válido",
        equalTo: "Por favor, escribe el mismo valor de nuevo",
        accept: "Por favor, escribe un valor con una extensión aceptada",
        maxlength: $.validator.format("Por favor, no escribas más de {0} caracteres"),
        minlength: $.validator.format("Por favor, no escribas menos de {0} caracteres"),
        rangelength: $.validator.format("Por favor, escribe un valor entre {0} y {1} caracteres"),
        range: $.validator.format("Por favor, escribe un valor entre {0} y {1}"),
        max: $.validator.format("Por favor, escribe un valor menor o igual a {0}"),
        min: $.validator.format("Por favor, escribe un valor mayor o igual a {0}"),
        step: $.validator.format("Por favor, escribe un múltiplo de {0}")
    });
    $(document).ready(function(){
        $("#wizard").steps();
        $("#form-vehicle-collective").steps({
            headerTag: "h1",
            bodyTag: "fieldset",
            titleTemplate:"<span class='text'></span> #title#",
            saveState: true,
            labels: {
                cancel: "Cancelar",
                current: "current step:",
                pagination: "Pagination",
                finish: "Cerrar",
                next: "Siguiente",
                previous: "Anterior",
                loading: "Cargando ..."
            },
            onStepChanging: (event, currentIndex, newIndex) => {
                if (currentIndex > newIndex)
                {
                    return true;
                }
                if (newIndex === 5)
                {
                    return false;
                }
                if (newIndex === 1) {
                    $("#policy-form").validate().settings.ignore = ":disabled,:hidden";
                    return $("#policy-form").valid();
                } else if (newIndex === 2) {
                    $('#extra-form').validate().settings.ignore = ":disabled,:hidden";
                    return $('#extra-form').valid();
                } else if (newIndex === 3) {
                    $('#receipt-form').validate().settings.ignore = ":disabled,:hidden";
                    return $('#receipt-form').valid();
                } else if (newIndex === 4) {
                    $('#commission-form').validate().settings.ignore = ":disabled,:hidden";
                    return $('#commission-form').valid();
                }
            },
            onStepChanged: (event, currentIndex, priorIndex) => {
                if (currentIndex === 1) {
                    $('#policy-form').submit();
                } else if (currentIndex === 2) {
                    $('#extra-form').submit();
                } else if (currentIndex === 3) {
                    $('#receipt-form').submit();
                } else if (currentIndex === 4) {
                    $('#commission-form').submit();
                }
            },
            onFinishing:(event, currentIndex) => {
                $('#verification-form').validate().settings.ignore = ":disabled";
                return $('#verification-form').valid();
            },
            onFinished: (a) => {
                $('#form-vehicle-collective .steps a:eq(0)').click();
                $('#form-vehicle-collective').hide();
                $('#verification-form').submit();
            }
        });
        $("#policy-form").on('keyup','.number_format',function(){
            var separador = $(this);
            for (var i = 0 ; i < separador.length; i++) {
                separador[i].addEventListener('input', (e) => {
                    var entrada = e.target.value.split(','),
                    parteEntera = entrada[0].replace(/\./g, ''),
                    parteDecimal = entrada[1],
                    salida = parteEntera.replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1.");
                    e.target.value = salida + (parteDecimal !== undefined ? ',' + parteDecimal.replace(/([0-9])([0-9]{2})$/,'') : '');
                }, false); 
            }    
        });
        $("#policy-form").on('keyup','.cedula_rif',function(){
            var separador = $(this);
            for (var i = 0 ; i < separador.length; i++) {
                separador[i].addEventListener('input', (e) => {
                    var entrada = e.target.value.split(',');
                    var parteEntera = entrada[0].replace(/\./g, '');
                    var salida = parteEntera.replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1.");
                    if ((salida.charAt(0) === 'J') || (salida.charAt(0) === 'G') || (salida.charAt(0) === 'V')) {
                        var parteRif = entrada[0];
                        e.target.value = parteRif;
                    } else {
                        e.target.value = salida;
                    }
                }, false); 
            }    
        });
        $("#commission-form").on('keyup','.number_format',function(){
            var separador = $(this);
            for (var i = 0 ; i < separador.length; i++) {
                separador[i].addEventListener('input', (e) => {
                    var entrada = e.target.value.split(','),
                    parteEntera = entrada[0].replace(/\./g, ''),
                    parteDecimal = entrada[1],
                    salida = parteEntera.replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1.");
                    e.target.value = salida + (parteDecimal !== undefined ? ',' + parteDecimal.replace(/([0-9])([0-9]{2})$/,'') : '');
                }, false); 
            }    
        });
    });
</script>

<script>
    $.extend($.validator.messages, {
        required: "Este campo es obligatorio",
        remote: "Por favor, rellena este campo",
        email: "Por favor, escribe una dirección de correo válida",
        url: "Por favor, escribe una URL válida",
        date: "Por favor, escribe una fecha válida",
        dateISO: "Por favor, escribe una fecha (ISO) válida",
        number: "Por favor, escribe un número entero válido",
        digits: "Por favor, escribe sólo dígitos",
        creditcard: "Por favor, escribe un número de tarjeta válido",
        equalTo: "Por favor, escribe el mismo valor de nuevo",
        accept: "Por favor, escribe un valor con una extensión aceptada",
        maxlength: $.validator.format("Por favor, no escribas más de {0} caracteres"),
        minlength: $.validator.format("Por favor, no escribas menos de {0} caracteres"),
        rangelength: $.validator.format("Por favor, escribe un valor entre {0} y {1} caracteres"),
        range: $.validator.format("Por favor, escribe un valor entre {0} y {1}"),
        max: $.validator.format("Por favor, escribe un valor menor o igual a {0}"),
        min: $.validator.format("Por favor, escribe un valor mayor o igual a {0}"),
        step: $.validator.format("Por favor, escribe un múltiplo de {0}")
    });
    $(document).ready(function(){
        $("#wizard").steps();
        $("#form-risk-diverse").steps({
            headerTag: "h1",
            bodyTag: "fieldset",
            titleTemplate:"<span class='text'></span> #title#",
            saveState: true,
            labels: {
                cancel: "Cancelar",
                current: "current step:",
                pagination: "Pagination",
                finish: "Cerrar",
                next: "Siguiente",
                previous: "Anterior",
                loading: "Cargando ..."
            },
            onStepChanging: (event, currentIndex, newIndex) => {
                if (currentIndex > newIndex)
                {
                    return true;
                }
                if (newIndex === 5)
                {
                    return false;
                }
                if (newIndex === 1) {
                    $("#policy-form").validate().settings.ignore = ":disabled,:hidden";
                    return $("#policy-form").valid();
                } else if (newIndex === 2) {
                    $('#extra-form').validate().settings.ignore = ":disabled,:hidden";
                    return $('#extra-form').valid();
                } else if (newIndex === 3) {
                    $('#receipt-form').validate().settings.ignore = ":disabled,:hidden";
                    return $('#receipt-form').valid();
                } else if (newIndex === 4) {
                    $('#commission-form').validate().settings.ignore = ":disabled,:hidden";
                    return $('#commission-form').valid();
                }
            },
            onStepChanged: (event, currentIndex, priorIndex) => {
                if (currentIndex === 1) {
                    $('#policy-form').submit();
                } else if (currentIndex === 2) {
                    $('#extra-form').submit();
                } else if (currentIndex === 3) {
                    $('#receipt-form').submit();
                } else if (currentIndex === 4) {
                    $('#commission-form').submit();
                }
            },
            onFinishing:(event, currentIndex) => {
                $('#verification-form').validate().settings.ignore = ":disabled";
                return $('#verification-form').valid();
            },
            onFinished: (a) => {
                $('#form-risk-diverse .steps a:eq(0)').click();
                $('#form-risk-diverse').hide();
                $('#verification-form').submit();
            }
        });
        $("#policy-form").on('keyup','.number_format',function(){
            var separador = $(this);
            for (var i = 0 ; i < separador.length; i++) {
                separador[i].addEventListener('input', (e) => {
                    var entrada = e.target.value.split(','),
                    parteEntera = entrada[0].replace(/\./g, ''),
                    parteDecimal = entrada[1],
                    salida = parteEntera.replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1.");
                    e.target.value = salida + (parteDecimal !== undefined ? ',' + parteDecimal.replace(/([0-9])([0-9]{2})$/,'') : '');
                }, false); 
            }    
        });
        $("#policy-form").on('keyup','.cedula_rif',function(){
            var separador = $(this);
            for (var i = 0 ; i < separador.length; i++) {
                separador[i].addEventListener('input', (e) => {
                    var entrada = e.target.value.split(',');
                    var parteEntera = entrada[0].replace(/\./g, '');
                    var salida = parteEntera.replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1.");
                    if ((salida.charAt(0) === 'J') || (salida.charAt(0) === 'G') || (salida.charAt(0) === 'V')) {
                        var parteRif = entrada[0];
                        e.target.value = parteRif;
                    } else {
                        e.target.value = salida;
                    }
                }, false); 
            }    
        });
        $("#commission-form").on('keyup','.number_format',function(){
            var separador = $(this);
            for (var i = 0 ; i < separador.length; i++) {
                separador[i].addEventListener('input', (e) => {
                    var entrada = e.target.value.split(','),
                    parteEntera = entrada[0].replace(/\./g, ''),
                    parteDecimal = entrada[1],
                    salida = parteEntera.replace(/(\d)(?=(\d{3})+(?!\d))/g, "$1.");
                    e.target.value = salida + (parteDecimal !== undefined ? ',' + parteDecimal.replace(/([0-9])([0-9]{2})$/,'') : '');
                }, false); 
            }    
        });
    });
</script>

<% if(typeof alert != 'undefined') { %>
    <script>
        Swal.fire({
            title: '<%= alertTitle %>',
            text: '<%= alertMessage %>',
            icon: '<%= alertIcon %>',
            showConfirmButton: <%= showConfirmButton %>,
            timer: <%= timer %>
        }).then(()=>{
            window.location='/<%= ruta %>'
        })
    </script>
<% } %>

<script>
    window.addEventListener("load", function() {
        document.getElementById("radioContainer").addEventListener("click", function() {
            document.getElementById("active-select-1").style.display = document.getElementById("fraccionamiento_boolean_recibo").checked ? "inline" : "none";
            document.getElementById("active-select-2").style.display = document.getElementById("fraccionamiento_boolean_recibo").checked ? "inline" : "none";
        });
    });
</script>

<script>
    $(document).ready(function () {
        $('#fecha_desde_colectivo').change(function () {
            var extraer = $('#fecha_desde_colectivo').val();
            extraer = extraer.split('-');
            year = parseInt(extraer[0]);
            month = parseInt(extraer[1]) - 1;
            day = parseInt(extraer[2]);
            var fecha = moment([year, month, day]).add(1, 'years');
            fecha = fecha.toISOString().substring(0, 10);
            $('#fecha_hasta_colectivo').val(fecha);
        });
    });
</script>

<script>
    var naturalInsureds = <%- JSON.stringify(naturalInsureds) %>;
    var legalInsureds = <%- JSON.stringify(legalInsureds) %>;
    function pasarNombreTomador() {
        var idRif = document.getElementById("id_rif_tomador").value;
        var checkboxTomadorViejo = document.getElementById("tomador_asegurado_colectivo").checked;
        if (idRif.startsWith('J') || idRif.startsWith('G')) {
            for (let i = 0; i < legalInsureds.length; i++) {
                let elementLegalInsured = legalInsureds[i];
                if (idRif === elementLegalInsured.rif_asegurado_per_jur) {
                    document.getElementById("correo_tomador").value = elementLegalInsured.correo_asegurado_per_jur;
                    document.getElementById("nombre_tomador_colectivo").value = elementLegalInsured.razon_social_per_jur;
                    if (checkboxTomadorViejo === true) {
                        document.getElementById("id_rif_asegurado").value = elementLegalInsured.rif_asegurado_per_jur;
                        document.getElementById("correo_asegurado").value = elementLegalInsured.correo_asegurado_per_jur;
                        document.getElementById("nombre_asegurado").value = elementLegalInsured.razon_social_per_jur;
                    } else {
                        document.getElementById("id_rif_asegurado").value = ''
                        document.getElementById("correo_asegurado").value = '';
                        document.getElementById("nombre_asegurado").value = '';
                    }
                    break;
                } else {
                    document.getElementById("correo_tomador").value = '';
                    document.getElementById("nombre_tomador_colectivo").value = '';
                }
            }
        } else {
            for (let i = 0; i < naturalInsureds.length; i++) {
                let elementNaturalInsured = naturalInsureds[i];
                if (idRif.match(/^\d/)) {
                    if (idRif === elementNaturalInsured.cedula_asegurado_per_nat) {
                        document.getElementById("correo_tomador").value = elementNaturalInsured.correo_asegurado_per_nat;
                        document.getElementById("nombre_tomador_colectivo").value = elementNaturalInsured.nombre_asegurado_per_nat + ' ' + elementNaturalInsured.apellido_asegurado_per_nat;
                        if (checkboxTomadorViejo === true) {
                            document.getElementById("id_rif_asegurado").value = elementNaturalInsured.cedula_asegurado_per_nat;
                            document.getElementById("correo_asegurado").value = elementNaturalInsured.correo_asegurado_per_nat;
                            document.getElementById("nombre_asegurado").value = elementNaturalInsured.nombre_asegurado_per_nat + ' ' + elementNaturalInsured.apellido_asegurado_per_nat;
                        } else {
                            document.getElementById("id_rif_asegurado").value = ''
                            document.getElementById("correo_asegurado").value = '';
                            document.getElementById("nombre_asegurado").value = '';
                        }
                        break;
                    } else {
                        document.getElementById("correo_tomador").value = '';
                        document.getElementById("nombre_tomador_colectivo").value = '';
                    }
                } else if (idRif.startsWith('')) {
                    document.getElementById("correo_tomador").value = '';
                    document.getElementById("nombre_tomador_colectivo").value = '';
                }
            }
        }
    }
</script>

<script>
    var naturalInsureds = <%- JSON.stringify(naturalInsureds) %>;
    var legalInsureds = <%- JSON.stringify(legalInsureds) %>;
    function pasarNombreAsegurado() {
        var idRif = document.getElementById("id_rif_asegurado").value;
        if (idRif.startsWith('J') || idRif.startsWith('G')) {
            for (let i = 0; i < legalInsureds.length; i++) {
                let elementLegalInsured = legalInsureds[i];
                if (idRif === elementLegalInsured.rif_asegurado_per_jur) {
                    document.getElementById("correo_asegurado").value = elementLegalInsured.correo_asegurado_per_jur;
                    document.getElementById("nombre_asegurado").value = elementLegalInsured.razon_social_per_jur;
                    break;
                } else {
                    document.getElementById("correo_asegurado").value = '';
                    document.getElementById("nombre_asegurado").value = '';
                }
            }
        } else {
            for (let i = 0; i < naturalInsureds.length; i++) {
                let elementNaturalInsured = naturalInsureds[i];
                if (idRif.match(/^\d/)) {
                    if (idRif === elementNaturalInsured.cedula_asegurado_per_nat) {
                        document.getElementById("correo_asegurado").value = elementNaturalInsured.correo_asegurado_per_nat;
                        document.getElementById("nombre_asegurado").value = elementNaturalInsured.nombre_asegurado_per_nat + ' ' + elementNaturalInsured.apellido_asegurado_per_nat;
                        break;
                    } else {
                        document.getElementById("correo_asegurado").value = '';
                        document.getElementById("nombre_asegurado").value = '';
                    }
                } else if (idRif.startsWith('')) {
                    document.getElementById("correo_asegurado").value = '';
                    document.getElementById("nombre_asegurado").value = '';
                }
            }
        }
    }
</script>

<script>
    var naturalInsureds = <%- JSON.stringify(naturalInsureds) %>;
    var legalInsureds = <%- JSON.stringify(legalInsureds) %>;
    function pasarNombreTomador2() {
        var idRif = document.getElementById("id_rif_tomador").value;
        if (idRif.startsWith('J') || idRif.startsWith('G')) {
            for (let i = 0; i < legalInsureds.length; i++) {
                let elementLegalInsured = legalInsureds[i];
                if (idRif === elementLegalInsured.rif_asegurado_per_jur) {
                    document.getElementById("correo_tomador").value = elementLegalInsured.correo_asegurado_per_jur;
                    document.getElementById("nombre_tomador_colectivo").value = elementLegalInsured.razon_social_per_jur;
                    break;
                } else {
                    document.getElementById("correo_tomador").value = '';
                    document.getElementById("nombre_tomador_colectivo").value = '';
                }
            }
        } else {
            for (let i = 0; i < naturalInsureds.length; i++) {
                let elementNaturalInsured = naturalInsureds[i];
                if (idRif.match(/^\d/)) {
                    if (idRif === elementNaturalInsured.cedula_asegurado_per_nat) {
                        document.getElementById("correo_tomador").value = elementNaturalInsured.correo_asegurado_per_nat;
                        document.getElementById("nombre_tomador_colectivo").value = elementNaturalInsured.nombre_asegurado_per_nat + ' ' + elementNaturalInsured.apellido_asegurado_per_nat;
                        break;
                    } else {
                        document.getElementById("correo_tomador").value = '';
                        document.getElementById("nombre_tomador_colectivo").value = '';
                    }
                } else if (idRif.startsWith('')) {
                    document.getElementById("correo_tomador").value = '';
                    document.getElementById("nombre_tomador_colectivo").value = '';
                }
            }
        }
    }
</script>

<script>
    function showInput() {
        var getSelectValue = document.getElementById("maternidad_colectivo").value;
        if (getSelectValue === 'SÍ') {
            document.getElementById("searchinput").style.display = "block";
        } else if (getSelectValue === 'NO') {
            document.getElementById("searchinput").style.display = "none";
        }
    }   
</script>

<script>
    function showInput2() {
        var getSelectValue = document.getElementById("plazo_espera_colectivo").value;
        if (getSelectValue === 'SÍ') {
            document.getElementById("searchinput2").style.display = "block";
        } else if (getSelectValue === 'NO') {
            document.getElementById("searchinput2").style.display = "none";
        }
    }   
</script>

<script>
    function showList() {
        var getSelectValue = document.getElementById("tipo_canal_colectivo").value;
        if (getSelectValue === 'AGENTE PROPIO') {
            document.getElementById("searchList").style.display = "block";
        } else {
            document.getElementById("searchList").style.display = "none";
        }
    }   
</script>

<script>
    $(document).ready(function() {
        $('.js-multiple').select2();
    });   
</script>

<script>
    function currencySignChange() {
        let coinType = document.getElementById("tipo_moneda_colectivo").value;
        if (coinType === 'BOLÍVAR') {
            $('.currency_format').toArray().forEach(function(field) {
                new Cleave(field, {
                    numeral: true,
                    numeralDecimalMark: ',',
                    delimiter: '.',
                    prefix: 'Bs ',
                });
            });
        } else if (coinType === 'DÓLAR') {
            $('.currency_format').toArray().forEach(function(field) {
                new Cleave(field, {
                    numeral: true,
                    numeralDecimalMark: ',',
                    delimiter: '.',
                    prefix: '$ ',
                });
            });
        } else if (coinType === 'EUROS') {
            $('.currency_format').toArray().forEach(function(field) {
                new Cleave(field, {
                    numeral: true,
                    numeralDecimalMark: ',',
                    delimiter: '.',
                    prefix: '€ ',
                });
            });
        }
    }   
</script>

<% if (typeof(collective) !== 'undefined') { %>
    <script>
        var collective = <%- JSON.stringify(collective) %>;
        function premiumCalculationDate() {
            var getSelectValue = document.getElementById("tipo_fraccionamiento_recibo").value;
            var checkboxDivision = document.getElementById("fraccionamiento_boolean_recibo").checked;
            if (getSelectValue === 'MENSUAL') {
                $(document).ready(function () {
                    $('#tipo_fraccionamiento_recibo').change(function () {
                        var extraer = $('#fecha_desde_recibo').val();
                        extraer = extraer.split('-');
                        year = parseInt(extraer[0]);
                        month = parseInt(extraer[1]) - 1;
                        day = parseInt(extraer[2]);
                        var fecha = moment([year, month, day]).add(1, 'months');
                        fecha = fecha.toISOString().substring(0, 10);
                        $('#fecha_pago_recibo').val(fecha);
                    });
                });
                $(document).ready(function () {
                    $('#fecha_desde_recibo').change(function () {
                        var extraer = $('#fecha_desde_recibo').val();
                        extraer = extraer.split('-');
                        year = parseInt(extraer[0]);
                        month = parseInt(extraer[1]) - 1;
                        day = parseInt(extraer[2]);
                        var fecha = moment([year, month, day]).add(1, 'months');
                        fecha = fecha.toISOString().substring(0, 10);
                        $('#fecha_hasta_recibo').val(fecha);
                    });
                });
                var numberMonthly = document.getElementById("numero_pago_recibo").value;
                if ((numberMonthly === '') || (numberMonthly === '0')) {
                    numberMonthly = 1;
                }
                var premiumMonthly = collective.prima_anual_colectivo / numberMonthly;
                premiumMonthly = String(premiumMonthly);
                if (collective.tipo_moneda_colectivo === 'BOLÍVAR') {
                    let cleave = new Cleave("#monto_prima_recibo", {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: 'Bs ',
                    });
                    cleave.setRawValue(premiumMonthly);
                } else if (collective.tipo_moneda_colectivo === 'DÓLAR') {
                    let cleave = new Cleave("#monto_prima_recibo", {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: '$ ',
                    });
                    cleave.setRawValue(premiumMonthly);
                } else if (collective.tipo_moneda_colectivo === 'EUROS') {
                    let cleave = new Cleave("#monto_prima_recibo", {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: '€ ',
                    });
                    cleave.setRawValue(premiumMonthly);
                }
            } else if (getSelectValue === 'BIMESTRAL') {
                $(document).ready(function () {
                    $('#tipo_fraccionamiento_recibo').change(function () {
                        var extraer = $('#fecha_desde_recibo').val();
                        extraer = extraer.split('-');
                        year = parseInt(extraer[0]);
                        month = parseInt(extraer[1]) - 1;
                        day = parseInt(extraer[2]);
                        var fecha = moment([year, month, day]).add(2, 'months');
                        fecha = fecha.toISOString().substring(0, 10);
                        $('#fecha_pago_recibo').val(fecha);
                    });
                });
                $(document).ready(function () {
                    $('#fecha_desde_recibo').change(function () {
                        var extraer = $('#fecha_desde_recibo').val();
                        extraer = extraer.split('-');
                        year = parseInt(extraer[0]);
                        month = parseInt(extraer[1]) - 1;
                        day = parseInt(extraer[2]);
                        var fecha = moment([year, month, day]).add(2, 'months');
                        fecha = fecha.toISOString().substring(0, 10);
                        $('#fecha_hasta_recibo').val(fecha);
                    });
                });
                var premiumBimonthly = collective.prima_anual_colectivo / 6;
                premiumBimonthly = String(premiumBimonthly);
                document.getElementById("numero_pago_recibo").value = 6;
                if (collective.tipo_moneda_colectivo === 'BOLÍVAR') {
                    let cleave = new Cleave("#monto_prima_recibo", {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: 'Bs ',
                    });
                    cleave.setRawValue(premiumBimonthly);
                } else if (collective.tipo_moneda_colectivo === 'DÓLAR') {
                    let cleave = new Cleave("#monto_prima_recibo", {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: '$ ',
                    });
                    cleave.setRawValue(premiumBimonthly);
                } else if (collective.tipo_moneda_colectivo === 'EUROS') {
                    let cleave = new Cleave("#monto_prima_recibo", {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: '€ ',
                    });
                    cleave.setRawValue(premiumBimonthly);
                }
            } else if (getSelectValue === 'TRIMESTRAL') {
                $(document).ready(function () {
                    $('#tipo_fraccionamiento_recibo').change(function () {
                        var extraer = $('#fecha_desde_recibo').val();
                        extraer = extraer.split('-');
                        year = parseInt(extraer[0]);
                        month = parseInt(extraer[1]) - 1;
                        day = parseInt(extraer[2]);
                        var fecha = moment([year, month, day]).add(3, 'months');
                        fecha = fecha.toISOString().substring(0, 10);
                        $('#fecha_pago_recibo').val(fecha);
                    });
                });
                $(document).ready(function () {
                    $('#fecha_desde_recibo').change(function () {
                        var extraer = $('#fecha_desde_recibo').val();
                        extraer = extraer.split('-');
                        year = parseInt(extraer[0]);
                        month = parseInt(extraer[1]) - 1;
                        day = parseInt(extraer[2]);
                        var fecha = moment([year, month, day]).add(3, 'months');
                        fecha = fecha.toISOString().substring(0, 10);
                        $('#fecha_hasta_recibo').val(fecha);
                    });
                });
                var premiumQuarterly = collective.prima_anual_colectivo / 4;
                premiumQuarterly = String(premiumQuarterly);
                document.getElementById("numero_pago_recibo").value = 4;
                if (collective.tipo_moneda_colectivo === 'BOLÍVAR') {
                    let cleave = new Cleave("#monto_prima_recibo", {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: 'Bs ',
                    });
                    cleave.setRawValue(premiumQuarterly);
                } else if (collective.tipo_moneda_colectivo === 'DÓLAR') {
                    let cleave = new Cleave("#monto_prima_recibo", {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: '$ ',
                    });
                    cleave.setRawValue(premiumQuarterly);
                } else if (collective.tipo_moneda_colectivo === 'EUROS') {
                    let cleave = new Cleave("#monto_prima_recibo", {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: '€ ',
                    });
                    cleave.setRawValue(premiumQuarterly);
                }
            } else if (getSelectValue === 'SEMESTRAL') {
                $(document).ready(function () {
                    $('#tipo_fraccionamiento_recibo').change(function () {
                        var extraer = $('#fecha_desde_recibo').val();
                        extraer = extraer.split('-');
                        year = parseInt(extraer[0]);
                        month = parseInt(extraer[1]) - 1;
                        day = parseInt(extraer[2]);
                        var fecha = moment([year, month, day]).add(6, 'months');
                        fecha = fecha.toISOString().substring(0, 10);
                        $('#fecha_pago_recibo').val(fecha);
                    });
                });
                $(document).ready(function () {
                    $('#fecha_desde_recibo').change(function () {
                        var extraer = $('#fecha_desde_recibo').val();
                        extraer = extraer.split('-');
                        year = parseInt(extraer[0]);
                        month = parseInt(extraer[1]) - 1;
                        day = parseInt(extraer[2]);
                        var fecha = moment([year, month, day]).add(6, 'months');
                        fecha = fecha.toISOString().substring(0, 10);
                        $('#fecha_hasta_recibo').val(fecha);
                    });
                });
                var premiumBiannual = collective.prima_anual_colectivo / 2;
                premiumBiannual = String(premiumBiannual);
                document.getElementById("numero_pago_recibo").value = 2;
                if (collective.tipo_moneda_colectivo === 'BOLÍVAR') {
                    let cleave = new Cleave("#monto_prima_recibo", {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: 'Bs ',
                    });
                    cleave.setRawValue(premiumBiannual);
                } else if (collective.tipo_moneda_colectivo === 'DÓLAR') {
                    let cleave = new Cleave("#monto_prima_recibo", {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: '$ ',
                    });
                    cleave.setRawValue(premiumBiannual);
                } else if (collective.tipo_moneda_colectivo === 'EUROS') {
                    let cleave = new Cleave("#monto_prima_recibo", {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: '€ ',
                    });
                    cleave.setRawValue(premiumBiannual);
                }
            }  else if (getSelectValue === 'ANUAL') {
                $(document).ready(function () {
                    $('#tipo_fraccionamiento_recibo').change(function () {
                        var extraer = $('#fecha_desde_recibo').val();
                        extraer = extraer.split('-');
                        year = parseInt(extraer[0]);
                        month = parseInt(extraer[1]) - 1;
                        day = parseInt(extraer[2]);
                        var fecha = moment([year, month, day]).add(1, 'years');
                        fecha = fecha.toISOString().substring(0, 10);
                        $('#fecha_pago_recibo').val(fecha);
                    });
                });
                $(document).ready(function () {
                    $('#fecha_desde_recibo').change(function () {
                        var extraer = $('#fecha_desde_recibo').val();
                        extraer = extraer.split('-');
                        year = parseInt(extraer[0]);
                        month = parseInt(extraer[1]) - 1;
                        day = parseInt(extraer[2]);
                        var fecha = moment([year, month, day]).add(1, 'years');
                        fecha = fecha.toISOString().substring(0, 10);
                        $('#fecha_hasta_recibo').val(fecha);
                    });
                });
                var annualPremium = collective.prima_anual_colectivo / 1;
                annualPremium = String(annualPremium);
                document.getElementById("numero_pago_recibo").value = 1;
                if (collective.tipo_moneda_colectivo === 'BOLÍVAR') {
                    let cleave = new Cleave("#monto_prima_recibo", {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: 'Bs ',
                    });
                    cleave.setRawValue(annualPremium);
                } else if (collective.tipo_moneda_colectivo === 'DÓLAR') {
                    let cleave = new Cleave("#monto_prima_recibo", {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: '$ ',
                    });
                    cleave.setRawValue(annualPremium);
                } else if (collective.tipo_moneda_colectivo === 'EUROS') {
                    let cleave = new Cleave("#monto_prima_recibo", {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: '€ ',
                    });
                    cleave.setRawValue(annualPremium);
                }
            }
            if (checkboxDivision === false) {
                if (collective.tipo_moneda_colectivo === 'BOLÍVAR') {
                    let cleave = new Cleave("#monto_prima_recibo", {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: 'Bs ',
                    });
                    cleave.setRawValue(String(collective.prima_anual_colectivo));
                } else if (collective.tipo_moneda_colectivo === 'DÓLAR') {
                    let cleave = new Cleave("#monto_prima_recibo", {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: '$ ',
                    });
                    cleave.setRawValue(String(collective.prima_anual_colectivo));
                } else if (collective.tipo_moneda_colectivo === 'EUROS') {
                    let cleave = new Cleave("#monto_prima_recibo", {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: '€ ',
                    });
                    cleave.setRawValue(String(collective.prima_anual_colectivo));
                }
                document.getElementById("numero_pago_recibo").value = 0;
                document.getElementById("tipo_fraccionamiento_recibo").value = '';
                document.getElementById("fecha_pago_recibo").value = '';
                document.getElementById("fecha_desde_recibo").value = '';
                document.getElementById("fecha_hasta_recibo").value = '';
            }
        }
    </script>

    <script>
        var collective = <%- JSON.stringify(collective) %>;
        console.log(collective)
        window.onload = function() {
            if (collective.tipo_moneda_colectivo === 'BOLÍVAR') {
                $('.currency_format_number').toArray().forEach(function(field) {
                    new Cleave(field, {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: 'Bs ',
                    });
                });
            } else if (collective.tipo_moneda_colectivo === 'DÓLAR') {
                $('.currency_format_number').toArray().forEach(function(field) {
                    new Cleave(field, {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: '$ ',
                    });
                });
            } else if (collective.tipo_moneda_colectivo === 'EUROS') {
                $('.currency_format_number').toArray().forEach(function(field) {
                    new Cleave(field, {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: '€ ',
                    });
                });
            }
        }   
    </script>
<% } %>

<script>
    $(document).ready(function(){
        $('.custom-file-input').on('change', function() {
            let fileName = $(this).val().split('\\').pop();
            $(this).next('.custom-file-label').addClass("selected").html(fileName);
        });
    }); 
</script>

</body>

</html>