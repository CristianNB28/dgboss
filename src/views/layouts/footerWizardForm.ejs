        <div class="footer">
            
        </div>
    </div>
</div>



<!-- Mainly scripts -->
<script src="/js/jquery-3.1.1.min.js"></script>
<script src="/js/jquery-2.1.1.js"></script>
<script src="/js/popper.min.js"></script>
<script src="/js/bootstrap.js"></script>
<script src="/js/plugins/metisMenu/jquery.metisMenu.js"></script>
<script src="/js/plugins/slimscroll/jquery.slimscroll.min.js"></script>

<!-- Custom and plugin javascript -->
<script src="/js/inspinia.js"></script>
<script src="/js/plugins/pace/pace.min.js"></script>

<!-- Steps -->
<script src="/js/plugins/steps/jquery.steps.min.js"></script>

<!-- Jquery Validate -->
<script src="/js/plugins/validate/jquery.validate.min.js"></script>

<script src="/js/plugins/jquery.cookie/jquery.cookie.js"></script>

<script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script src="/js/moment.js"></script>

<script src="/js/cleave-js/cleave.min.js"></script>

<script>
    var policies = <%- JSON.stringify(policies) %>;
    var receipts = <%- JSON.stringify(receipts) %>;
    $.extend($.validator.messages, {
        required: "Este campo es obligatorio",
        remote: "Por favor, rellena este campo",
        email: "Por favor, escribe una dirección de correo válida",
        url: "Por favor, escribe una URL válida",
        date: "Por favor, escribe una fecha válida",
        dateISO: "Por favor, escribe una fecha (ISO) válida",
        number: "Por favor, escribe un número entero válido",
        digits: "Por favor, escribe sólo dígitos",
        creditcard: "Por favor, escribe un número de tarjeta válido",
        equalTo: "Por favor, escribe el mismo valor de nuevo",
        accept: "Por favor, escribe un valor con una extensión aceptada",
        maxlength: $.validator.format("Por favor, no escribas más de {0} caracteres"),
        minlength: $.validator.format("Por favor, no escribas menos de {0} caracteres"),
        rangelength: $.validator.format("Por favor, escribe un valor entre {0} y {1} caracteres"),
        range: $.validator.format("Por favor, escribe un valor entre {0} y {1}"),
        max: $.validator.format("Por favor, escribe un valor menor o igual a {0}"),
        min: $.validator.format("Por favor, escribe un valor mayor o igual a {0}"),
        step: $.validator.format("Por favor, escribe un múltiplo de {0}")
    });
    function esRepetidoNumPoliza(value, element, param) {
        let numberPolicy = document.getElementById("numero_poliza").value
        const even = (policy) => policy.numero_poliza === numberPolicy;
        if (policies.some(even) === true) {
            return false;
        } else {
            return true;
        }
    }
    function esRepetidoNumRecibo(value, element, param) {
        let numberReceipt = document.getElementById("numero_recibo").value
        const even = (receipt) => receipt.numero_recibo === numberReceipt;
        if (receipts.some(even) === true) {
            return false;
        } else {
            return true;
        }
    }
    $.validator.addMethod("esrepetidonumpoliza", esRepetidoNumPoliza, "Se repite el número de póliza");
    $.validator.addMethod("esrepetidonumrecibo", esRepetidoNumRecibo, "Se repite el número de recibo");
    $(document).ready(function(){
        $("#wizard").steps();
        $("#form-patrimonial").steps({
            headerTag: "h1",
            bodyTag: "fieldset",
            titleTemplate:"<span class='text'></span> #title#",
            saveState: true,
            labels: {
                cancel: "Cancelar",
                current: "current step:",
                pagination: "Pagination",
                finish: "Cerrar",
                next: "Siguiente",
                previous: "Anterior",
                loading: "Cargando ..."
            },
            onStepChanging: (event, currentIndex, newIndex) => {
                if (currentIndex > newIndex)
                {
                    return true;
                }
                if (newIndex === 4)
                {
                    return false;
                }
                if (newIndex === 1) {
                    $("#policy-form-patrimonial").validate().settings.ignore = ":disabled,:hidden";
                    return $("#policy-form-patrimonial").valid();
                } else if (newIndex === 2) {
                    $('#receipt-form-patrimonial').validate().settings.ignore = ":disabled,:hidden";
                    return $('#receipt-form-patrimonial').valid();
                } else if (newIndex === 3) {
                    $('#commission-form-patrimonial').validate().settings.ignore = ":disabled,:hidden";
                    return $('#commission-form-patrimonial').valid();
                }
            },
            onStepChanged: (event, currentIndex, priorIndex) => {
                if (currentIndex === 1 && priorIndex === 2) {
                    $("a[href$='previous']").on('click', function (event) {
                        event.preventdefault();
                    });
                    return;
                } else if (currentIndex === 2 && priorIndex === 3) {
                    $("a[href$='previous']").on('click', function (event) {
                        event.preventdefault();
                    });
                    return;
                }
                if (currentIndex === 1) {
                    storeValuesPolicyPatrimonial();
                    $('#policy-form-patrimonial').submit();
                } else if (currentIndex === 2) {
                    storeValuesReceiptPatrimonial();
                    $('#receipt-form-patrimonial').submit();
                } else if (currentIndex === 3) {
                    storeValuesCommissionPatrimonial();
                    $('#commission-form-patrimonial').submit();
                }
            },
            onFinishing:(event, currentIndex) => {
                $('#verification-form').validate().settings.ignore = ":disabled";
                return $('#verification-form').valid();
            },
            onFinished: (a) => {
                localStorage.clear();
                $('#form-patrimonial .steps a:eq(0)').click();
                $('#form-patrimonial').hide();
                $('#verification-form').submit();
            }
        });
        $().ready(function () {
            $("#policy-form-patrimonial").validate({
                rules: {
                    numero_poliza: {
                        esrepetidonumpoliza: true
                    }
                }
            });
        });
        $().ready(function () {
            $("#receipt-form-patrimonial").validate({
                rules: {
                    numero_recibo: {
                        esrepetidonumrecibo: true
                    }
                }
            });
        });
        $("#policy-form-patrimonial").on('keyup','.porcentaje_tasa',function(){
            new Cleave('.porcentaje_tasa', {
                numeral: true,
                numeralDecimalMark: ',',
                delimiter: '.',
                prefix: '%',
                tailPrefix: true
            });    
        });
        $("#receipt-form-patrimonial").on('keyup','.porcentaje_tasa',function(){
            $('.porcentaje_tasa').toArray().forEach(function(field) {
                new Cleave(field, {
                    numeral: true,
                    numeralDecimalMark: ',',
                    delimiter: '.',
                    prefix: '%',
                    tailPrefix: true
                });
            });    
        });
        $("#commission-form-patrimonial").on('keyup','.porcentaje_tasa',function(){
            $('.porcentaje_tasa').toArray().forEach(function(field) {
                new Cleave(field, {
                    numeral: true,
                    numeralDecimalMark: ',',
                    delimiter: '.',
                    prefix: '%',
                    tailPrefix: true
                });
            });
        });
    });
</script>

<script>
    var policies = <%- JSON.stringify(policies) %>;
    var receipts = <%- JSON.stringify(receipts) %>;
    $.extend($.validator.messages, {
        required: "Este campo es obligatorio",
        remote: "Por favor, rellena este campo",
        email: "Por favor, escribe una dirección de correo válida",
        url: "Por favor, escribe una URL válida",
        date: "Por favor, escribe una fecha válida",
        dateISO: "Por favor, escribe una fecha (ISO) válida",
        number: "Por favor, escribe un número entero válido",
        digits: "Por favor, escribe sólo dígitos",
        creditcard: "Por favor, escribe un número de tarjeta válido",
        equalTo: "Por favor, escribe el mismo valor de nuevo",
        accept: "Por favor, escribe un valor con una extensión aceptada",
        maxlength: $.validator.format("Por favor, no escribas más de {0} caracteres"),
        minlength: $.validator.format("Por favor, no escribas menos de {0} caracteres"),
        rangelength: $.validator.format("Por favor, escribe un valor entre {0} y {1} caracteres"),
        range: $.validator.format("Por favor, escribe un valor entre {0} y {1}"),
        max: $.validator.format("Por favor, escribe un valor menor o igual a {0}"),
        min: $.validator.format("Por favor, escribe un valor mayor o igual a {0}"),
        step: $.validator.format("Por favor, escribe un múltiplo de {0}")
    });
    function esRepetidoNumPoliza(value, element, param) {
        let numberPolicy = document.getElementById("numero_poliza").value
        const even = (policy) => policy.numero_poliza === numberPolicy;
        if (policies.some(even) === true) {
            return false;
        } else {
            return true;
        }
    }
    function esRepetidoNumRecibo(value, element, param) {
        let numberReceipt = document.getElementById("numero_recibo").value
        const even = (receipt) => receipt.numero_recibo === numberReceipt;
        if (receipts.some(even) === true) {
            return false;
        } else {
            return true;
        }
    }
    $.validator.addMethod("esrepetidonumpoliza", esRepetidoNumPoliza, "Se repite el número de póliza");
    $.validator.addMethod("esrepetidonumrecibo", esRepetidoNumRecibo, "Se repite el número de recibo");
    $(document).ready(function(){
        $("#wizard").steps();
        $("#form-bail").steps({
            headerTag: "h1",
            bodyTag: "fieldset",
            titleTemplate:"<span class='text'></span> #title#",
            saveState: true,
            labels: {
                cancel: "Cancelar",
                current: "current step:",
                pagination: "Pagination",
                finish: "Cerrar",
                next: "Siguiente",
                previous: "Anterior",
                loading: "Cargando ..."
            },
            onStepChanging: (event, currentIndex, newIndex) => {
                if (currentIndex > newIndex)
                {
                    return true;
                }
                if (newIndex === 4)
                {
                    return false;
                }
                if (newIndex === 1) {
                    $("#policy-form-bail").validate().settings.ignore = ":disabled,:hidden";
                    return $("#policy-form-bail").valid();
                } else if (newIndex === 2) {
                    $('#receipt-form-bail').validate().settings.ignore = ":disabled,:hidden";
                    return $('#receipt-form-bail').valid();
                } else if (newIndex === 3) {
                    $('#commission-form-bail').validate().settings.ignore = ":disabled,:hidden";
                    return $('#commission-form-bail').valid();
                }
            },
            onStepChanged: (event, currentIndex, priorIndex) => {
                if (currentIndex === 1 && priorIndex === 2) {
                    $("a[href$='previous']").on('click', function (event) {
                        event.preventdefault();
                    });
                    return;
                } else if (currentIndex === 2 && priorIndex === 3) {
                    $("a[href$='previous']").on('click', function (event) {
                        event.preventdefault();
                    });
                    return;
                }
                if (currentIndex === 1) {
                    storeValuesPolicyBail();
                    $('#policy-form-bail').submit();
                } else if (currentIndex === 2) {
                    storeValuesReceiptBail();
                    $('#receipt-form-bail').submit();
                } else if (currentIndex === 3) {
                    storeValuesCommissionBail();
                    $('#commission-form-bail').submit();
                }
            },
            onFinishing:(event, currentIndex) => {
                $('#verification-form').validate().settings.ignore = ":disabled";
                return $('#verification-form').valid();
            },
            onFinished: (a) => {
                localStorage.clear();
                $('#form-bail .steps a:eq(0)').click();
                $('#form-bail').hide();
                $('#verification-form').submit();
            }
        });
        $().ready(function () {
            $("#policy-form-bail").validate({
                rules: {
                    numero_poliza: {
                        esrepetidonumpoliza: true
                    }
                }
            });
        });
        $().ready(function () {
            $("#receipt-form-bail").validate({
                rules: {
                    numero_recibo: {
                        esrepetidonumrecibo: true
                    }
                }
            });
        });
        $("#policy-form-bail").on('keyup','.porcentaje_tasa',function(){
            new Cleave('.porcentaje_tasa', {
                numeral: true,
                numeralDecimalMark: ',',
                delimiter: '.',
                prefix: '%',
                tailPrefix: true
            });    
        });
        $("#receipt-form-bail").on('keyup','.porcentaje_tasa',function(){
            $('.porcentaje_tasa').toArray().forEach(function(field) {
                new Cleave(field, {
                    numeral: true,
                    numeralDecimalMark: ',',
                    delimiter: '.',
                    prefix: '%',
                    tailPrefix: true
                });
            });    
        });
        $("#commission-form-bail").on('keyup','.porcentaje_tasa',function(){
            $('.porcentaje_tasa').toArray().forEach(function(field) {
                new Cleave(field, {
                    numeral: true,
                    numeralDecimalMark: ',',
                    delimiter: '.',
                    prefix: '%',
                    tailPrefix: true
                });
            });
        });
    });
</script>

<script>
    var policies = <%- JSON.stringify(policies) %>;
    var receipts = <%- JSON.stringify(receipts) %>;
    $.extend($.validator.messages, {
        required: "Este campo es obligatorio",
        remote: "Por favor, rellena este campo",
        email: "Por favor, escribe una dirección de correo válida",
        url: "Por favor, escribe una URL válida",
        date: "Por favor, escribe una fecha válida",
        dateISO: "Por favor, escribe una fecha (ISO) válida",
        number: "Por favor, escribe un número entero válido",
        digits: "Por favor, escribe sólo dígitos",
        creditcard: "Por favor, escribe un número de tarjeta válido",
        equalTo: "Por favor, escribe el mismo valor de nuevo",
        accept: "Por favor, escribe un valor con una extensión aceptada",
        maxlength: $.validator.format("Por favor, no escribas más de {0} caracteres"),
        minlength: $.validator.format("Por favor, no escribas menos de {0} caracteres"),
        rangelength: $.validator.format("Por favor, escribe un valor entre {0} y {1} caracteres"),
        range: $.validator.format("Por favor, escribe un valor entre {0} y {1}"),
        max: $.validator.format("Por favor, escribe un valor menor o igual a {0}"),
        min: $.validator.format("Por favor, escribe un valor mayor o igual a {0}"),
        step: $.validator.format("Por favor, escribe un múltiplo de {0}")
    });
    function esRepetidoNumPoliza(value, element, param) {
        let numberPolicy = document.getElementById("numero_poliza").value
        const even = (policy) => policy.numero_poliza === numberPolicy;
        if (policies.some(even) === true) {
            return false;
        } else {
            return true;
        }
    }
    function esRepetidoNumRecibo(value, element, param) {
        let numberReceipt = document.getElementById("numero_recibo").value
        const even = (receipt) => receipt.numero_recibo === numberReceipt;
        if (receipts.some(even) === true) {
            return false;
        } else {
            return true;
        }
    }
    $.validator.addMethod("esrepetidonumpoliza", esRepetidoNumPoliza, "Se repite el número de póliza");
    $.validator.addMethod("esrepetidonumrecibo", esRepetidoNumRecibo, "Se repite el número de recibo");
    $(document).ready(function(){
        $("#wizard").steps();
        $("#form-another-branch").steps({
            headerTag: "h1",
            bodyTag: "fieldset",
            titleTemplate:"<span class='text'></span> #title#",
            saveState: true,
            labels: {
                cancel: "Cancelar",
                current: "current step:",
                pagination: "Pagination",
                finish: "Cerrar",
                next: "Siguiente",
                previous: "Anterior",
                loading: "Cargando ..."
            },
            onStepChanging: (event, currentIndex, newIndex) => {
                if (currentIndex > newIndex)
                {
                    return true;
                }
                if (newIndex === 4)
                {
                    return false;
                }
                if (newIndex === 1) {
                    $("#policy-form-another-branch").validate().settings.ignore = ":disabled,:hidden";
                    return $("#policy-form-another-branch").valid();
                } else if (newIndex === 2) {
                    $('#receipt-form-another-branch').validate().settings.ignore = ":disabled,:hidden";
                    return $('#receipt-form-another-branch').valid();
                } else if (newIndex === 3) {
                    $('#commission-form-another-branch').validate().settings.ignore = ":disabled,:hidden";
                    return $('#commission-form-another-branch').valid();
                }
            },
            onStepChanged: (event, currentIndex, priorIndex) => {
                if (currentIndex === 1 && priorIndex === 2) {
                    $("a[href$='previous']").on('click', function (event) {
                        event.preventdefault();
                    });
                    return;
                } else if (currentIndex === 2 && priorIndex === 3) {
                    $("a[href$='previous']").on('click', function (event) {
                        event.preventdefault();
                    });
                    return;
                }
                if (currentIndex === 1) {
                    storeValuesPolicyAnotherBranch();
                    $('#policy-form-another-branch').submit();
                } else if (currentIndex === 2) {
                    storeValuesReceiptAnotherBranch();
                    $('#receipt-form-another-branch').submit();
                } else if (currentIndex === 3) {
                    storeValuesCommissionAnotherBranch();
                    $('#commission-form-another-branch').submit();
                }
            },
            onFinishing:(event, currentIndex) => {
                $('#verification-form').validate().settings.ignore = ":disabled";
                return $('#verification-form').valid();
            },
            onFinished: (a) => {
                localStorage.clear();
                $('#form-another-branch .steps a:eq(0)').click();
                $('#form-another-branch').hide();
                $('#verification-form').submit();
            }
        });
        $().ready(function () {
            $("#policy-form-another-branch").validate({
                rules: {
                    numero_poliza: {
                        esrepetidonumpoliza: true
                    }
                }
            });
        });
        $().ready(function () {
            $("#receipt-form-another-branch").validate({
                rules: {
                    numero_recibo: {
                        esrepetidonumrecibo: true
                    }
                }
            });
        });
        $("#policy-form-another-branch").on('keyup','.porcentaje_tasa',function(){
            new Cleave('.porcentaje_tasa', {
                numeral: true,
                numeralDecimalMark: ',',
                delimiter: '.',
                prefix: '%',
                tailPrefix: true
            });    
        });
        $("#receipt-form-another-branch").on('keyup','.porcentaje_tasa',function(){
            $('.porcentaje_tasa').toArray().forEach(function(field) {
                new Cleave(field, {
                    numeral: true,
                    numeralDecimalMark: ',',
                    delimiter: '.',
                    prefix: '%',
                    tailPrefix: true
                });
            });    
        });
        $("#commission-form-another-branch").on('keyup','.porcentaje_tasa',function(){
            $('.porcentaje_tasa').toArray().forEach(function(field) {
                new Cleave(field, {
                    numeral: true,
                    numeralDecimalMark: ',',
                    delimiter: '.',
                    prefix: '%',
                    tailPrefix: true
                });
            });
        });
    });
</script>

<script>
    var policies = <%- JSON.stringify(policies) %>;
    var receipts = <%- JSON.stringify(receipts) %>;
    $.extend($.validator.messages, {
        required: "Este campo es obligatorio",
        remote: "Por favor, rellena este campo",
        email: "Por favor, escribe una dirección de correo válida",
        url: "Por favor, escribe una URL válida",
        date: "Por favor, escribe una fecha válida",
        dateISO: "Por favor, escribe una fecha (ISO) válida",
        number: "Por favor, escribe un número entero válido",
        digits: "Por favor, escribe sólo dígitos",
        creditcard: "Por favor, escribe un número de tarjeta válido",
        equalTo: "Por favor, escribe el mismo valor de nuevo",
        accept: "Por favor, escribe un valor con una extensión aceptada",
        maxlength: $.validator.format("Por favor, no escribas más de {0} caracteres"),
        minlength: $.validator.format("Por favor, no escribas menos de {0} caracteres"),
        rangelength: $.validator.format("Por favor, escribe un valor entre {0} y {1} caracteres"),
        range: $.validator.format("Por favor, escribe un valor entre {0} y {1}"),
        max: $.validator.format("Por favor, escribe un valor menor o igual a {0}"),
        min: $.validator.format("Por favor, escribe un valor mayor o igual a {0}"),
        step: $.validator.format("Por favor, escribe un múltiplo de {0}")
    });
    function esRepetidoNumPoliza(value, element, param) {
        let numberPolicy = document.getElementById("numero_poliza").value
        const even = (policy) => policy.numero_poliza === numberPolicy;
        if (policies.some(even) === true) {
            return false;
        } else {
            return true;
        }
    }
    function esRepetidoNumRecibo(value, element, param) {
        let numberReceipt = document.getElementById("numero_recibo").value
        const even = (receipt) => receipt.numero_recibo === numberReceipt;
        if (receipts.some(even) === true) {
            return false;
        } else {
            return true;
        }
    }
    $.validator.addMethod("esrepetidonumpoliza", esRepetidoNumPoliza, "Se repite el número de póliza");
    $.validator.addMethod("esrepetidonumrecibo", esRepetidoNumRecibo, "Se repite el número de recibo");
    $(document).ready(function(){
        $("#wizard").steps();
        $("#form-ap").steps({
            headerTag: "h1",
            bodyTag: "fieldset",
            titleTemplate:"<span class='text'></span> #title#",
            saveState: true,
            labels: {
                cancel: "Cancelar",
                current: "current step:",
                pagination: "Pagination",
                finish: "Cerrar",
                next: "Siguiente",
                previous: "Anterior",
                loading: "Cargando ..."
            },
            onStepChanging: (event, currentIndex, newIndex) => {
                if (currentIndex > newIndex)
                {
                    return true;
                }
                if (newIndex === 4)
                {
                    return false;
                }
                if (newIndex === 1) {
                    $("#policy-form-ap").validate().settings.ignore = ":disabled,:hidden";
                    return $("#policy-form-ap").valid();
                } else if (newIndex === 2) {
                    $('#receipt-form-ap').validate().settings.ignore = ":disabled,:hidden";
                    return $('#receipt-form-ap').valid();
                } else if (newIndex === 3) {
                    $('#commission-form-ap').validate().settings.ignore = ":disabled,:hidden";
                    return $('#commission-form-ap').valid();
                }
            },
            onStepChanged: (event, currentIndex, priorIndex) => {
                if (currentIndex === 1 && priorIndex === 2) {
                    $("a[href$='previous']").on('click', function (event) {
                        event.preventdefault();
                    });
                    return;
                } else if (currentIndex === 2 && priorIndex === 3) {
                    $("a[href$='previous']").on('click', function (event) {
                        event.preventdefault();
                    });
                    return;
                }
                if (currentIndex === 1) {
                    storeValuesPolicyAp();
                    $('#policy-form-ap').submit();
                } else if (currentIndex === 2) {
                    storeValuesReceiptAp();
                    $('#receipt-form-ap').submit();
                } else if (currentIndex === 3) {
                    storeValuesCommissionAp();
                    $('#commission-form-ap').submit();
                }
            },
            onFinishing:(event, currentIndex) => {
                $('#verification-form').validate().settings.ignore = ":disabled";
                return $('#verification-form').valid();
            },
            onFinished: (a) => {
                localStorage.clear();
                $('#form-ap .steps a:eq(0)').click();
                $('#form-ap').hide();
                $('#verification-form').submit();
            }
        });
        $().ready(function () {
            $("#policy-form-ap").validate({
                rules: {
                    numero_poliza: {
                        esrepetidonumpoliza: true
                    }
                }
            });
        });
        $().ready(function () {
            $("#receipt-form-ap").validate({
                rules: {
                    numero_recibo: {
                        esrepetidonumrecibo: true
                    }
                }
            });
        });
        $("#receipt-form-ap").on('keyup','.porcentaje_tasa',function(){
            new Cleave('.porcentaje_tasa', {
                numeral: true,
                numeralDecimalMark: ',',
                delimiter: '.',
                prefix: '%',
                tailPrefix: true
            });    
        });
        $("#commission-form-ap").on('keyup','.porcentaje_tasa',function(){
            $('.porcentaje_tasa').toArray().forEach(function(field) {
                new Cleave(field, {
                    numeral: true,
                    numeralDecimalMark: ',',
                    delimiter: '.',
                    prefix: '%',
                    tailPrefix: true
                });
            });
        });
    });
</script>

<script>
    var policies = <%- JSON.stringify(policies) %>;
    var receipts = <%- JSON.stringify(receipts) %>;
    $.extend($.validator.messages, {
        required: "Este campo es obligatorio",
        remote: "Por favor, rellena este campo",
        email: "Por favor, escribe una dirección de correo válida",
        url: "Por favor, escribe una URL válida",
        date: "Por favor, escribe una fecha válida",
        dateISO: "Por favor, escribe una fecha (ISO) válida",
        number: "Por favor, escribe un número entero válido",
        digits: "Por favor, escribe sólo dígitos",
        creditcard: "Por favor, escribe un número de tarjeta válido",
        equalTo: "Por favor, escribe el mismo valor de nuevo",
        accept: "Por favor, escribe un valor con una extensión aceptada",
        maxlength: $.validator.format("Por favor, no escribas más de {0} caracteres"),
        minlength: $.validator.format("Por favor, no escribas menos de {0} caracteres"),
        rangelength: $.validator.format("Por favor, escribe un valor entre {0} y {1} caracteres"),
        range: $.validator.format("Por favor, escribe un valor entre {0} y {1}"),
        max: $.validator.format("Por favor, escribe un valor menor o igual a {0}"),
        min: $.validator.format("Por favor, escribe un valor mayor o igual a {0}"),
        step: $.validator.format("Por favor, escribe un múltiplo de {0}")
    });
    function esRepetidoNumPoliza(value, element, param) {
        let numberPolicy = document.getElementById("numero_poliza").value
        const even = (policy) => policy.numero_poliza === numberPolicy;
        if (policies.some(even) === true) {
            return false;
        } else {
            return true;
        }
    }
    function esRepetidoNumRecibo(value, element, param) {
        let numberReceipt = document.getElementById("numero_recibo").value
        const even = (receipt) => receipt.numero_recibo === numberReceipt;
        if (receipts.some(even) === true) {
            return false;
        } else {
            return true;
        }
    }
    $.validator.addMethod("esrepetidonumpoliza", esRepetidoNumPoliza, "Se repite el número de póliza");
    $.validator.addMethod("esrepetidonumrecibo", esRepetidoNumRecibo, "Se repite el número de recibo");
    $(document).ready(function(){
        $("#wizard").steps();
        $("#form-travel").steps({
            headerTag: "h1",
            bodyTag: "fieldset",
            titleTemplate:"<span class='text'></span> #title#",
            saveState: true,
            labels: {
                cancel: "Cancelar",
                current: "current step:",
                pagination: "Pagination",
                finish: "Cerrar",
                next: "Siguiente",
                previous: "Anterior",
                loading: "Cargando ..."
            },
            onStepChanging: (event, currentIndex, newIndex) => {
                if (currentIndex > newIndex)
                {
                    return true;
                }
                if (newIndex === 4)
                {
                    return false;
                }
                if (newIndex === 1) {
                    $("#policy-form-travel").validate().settings.ignore = ":disabled,:hidden";
                    return $("#policy-form-travel").valid();
                } else if (newIndex === 2) {
                    $('#receipt-form-travel').validate().settings.ignore = ":disabled,:hidden";
                    return $('#receipt-form-travel').valid();
                } else if (newIndex === 3) {
                    $('#commission-form-travel').validate().settings.ignore = ":disabled,:hidden";
                    return $('#commission-form-travel').valid();
                }
            },
            onStepChanged: (event, currentIndex, priorIndex) => {
                if (currentIndex === 1 && priorIndex === 2) {
                    $("a[href$='previous']").on('click', function (event) {
                        event.preventdefault();
                    });
                    return;
                } else if (currentIndex === 2 && priorIndex === 3) {
                    $("a[href$='previous']").on('click', function (event) {
                        event.preventdefault();
                    });
                    return;
                }
                if (currentIndex === 1) {
                    storeValuesPolicyTravel();
                    $('#policy-form-travel').submit();
                } else if (currentIndex === 2) {
                    storeValuesReceiptTravel();
                    $('#receipt-form-travel').submit();
                } else if (currentIndex === 3) {
                    storeValuesCommissionTravel();
                    $('#commission-form-travel').submit();
                }
            },
            onFinishing:(event, currentIndex) => {
                $('#verification-form').validate().settings.ignore = ":disabled";
                return $('#verification-form').valid();
            },
            onFinished: (a) => {
                localStorage.clear();
                $('#form-travel .steps a:eq(0)').click();
                $('#form-travel').hide();
                $('#verification-form').submit();
            }
        });
        $().ready(function () {
            $("#policy-form-travel").validate({
                rules: {
                    numero_poliza: {
                        esrepetidonumpoliza: true
                    }
                }
            });
        });
        $().ready(function () {
            $("#receipt-form-travel").validate({
                rules: {
                    numero_recibo: {
                        esrepetidonumrecibo: true
                    }
                }
            });
        });
        $("#receipt-form-travel").on('keyup','.porcentaje_tasa',function(){
            new Cleave('.porcentaje_tasa', {
                numeral: true,
                numeralDecimalMark: ',',
                delimiter: '.',
                prefix: '%',
                tailPrefix: true
            });    
        });
        $("#commission-form-travel").on('keyup','.porcentaje_tasa',function(){
            $('.porcentaje_tasa').toArray().forEach(function(field) {
                new Cleave(field, {
                    numeral: true,
                    numeralDecimalMark: ',',
                    delimiter: '.',
                    prefix: '%',
                    tailPrefix: true
                });
            });
        });
    });
</script>

<% if(typeof alert != 'undefined') { %>
    <script>
        Swal.fire({
            title: '<%= alertTitle %>',
            text: '<%= alertMessage %>',
            icon: '<%= alertIcon %>',
            showConfirmButton: <%= showConfirmButton %>,
            timer: <%= timer %>
        }).then(()=>{
            window.location='/<%= ruta %>'
        })
    </script>
<% } %>

<!-- Poliza de Patrimonial -->
<script>
    function storeValuesPolicyPatrimonial() {
        let formDataPolicyPatrimonial = [];
        localStorage.removeItem('formDataPolicyPatrimonial');
        $('#policy-form-patrimonial input[type=text]').each(function(){
            formDataPolicyPatrimonial.push({ name: this.name, value: this.value});
        });
        $('#policy-form-patrimonial input[type=email]').each(function(){
            formDataPolicyPatrimonial.push({ name: this.name, value: this.value});
        });
        $('#policy-form-patrimonial input[type=date]').each(function(){
            formDataPolicyPatrimonial.push({ name: this.name, value: this.value});
        });
        $('#policy-form-patrimonial select').each(function(){
            formDataPolicyPatrimonial.push({ name: this.name, value: this.value});
        });
        $('#policy-form-patrimonial #tomador_asegurado_poliza').each(function(){
            let markedCheck = $(this).prop('checked');
            formDataPolicyPatrimonial.push({ name: this.name, value: markedCheck});
        });
        localStorage.setItem("formDataPolicyPatrimonial", JSON.stringify(formDataPolicyPatrimonial));
    }
    function getPolicyPatrimonial() {
        if(localStorage.formDataPolicyPatrimonial !== undefined){
            formDataPolicyPatrimonial = JSON.parse(localStorage.formDataPolicyPatrimonial);
            for (var i = 0; i < formDataPolicyPatrimonial.length; i++) {
                $(`[name=${formDataPolicyPatrimonial[i].name}]`).val(formDataPolicyPatrimonial[i].value);
                if ((formDataPolicyPatrimonial[i].name === 'tomador_asegurado_poliza') && (formDataPolicyPatrimonial[i].value === true)) {
                    document.getElementById("tomador_asegurado_poliza").checked = formDataPolicyPatrimonial[i].value;
                }
                if ((formDataPolicyPatrimonial[i].name === 'tipo_canal_poliza') && (formDataPolicyPatrimonial[i].value === 'AGENTE PROPIO')) {
                    document.getElementById("searchList").style.display = "block";
                }
            }
        }
    }
</script>

<script>
    function storeValuesReceiptPatrimonial() {
        let formDataReceiptPatrimonial = [];
        localStorage.removeItem('formDataReceiptPatrimonial');
        $('#receipt-form-patrimonial input[type=text]').each(function(){
            formDataReceiptPatrimonial.push({ name: this.name, value: this.value});
        });
        $('#receipt-form-patrimonial input[type=number]').each(function(){
            formDataReceiptPatrimonial.push({ name: this.name, value: this.value});
        });
        $('#receipt-form-patrimonial input[type=date]').each(function(){
            formDataReceiptPatrimonial.push({ name: this.name, value: this.value});
        });
        $('#receipt-form-patrimonial select').each(function(){
            formDataReceiptPatrimonial.push({ name: this.name, value: this.value});
        });
        $('#receipt-form-patrimonial #fraccionamiento_boolean_recibo').each(function(){
            let markedCheck = $(this).prop('checked');
            formDataReceiptPatrimonial.push({ name: this.name, value: markedCheck});
        });
        localStorage.setItem("formDataReceiptPatrimonial", JSON.stringify(formDataReceiptPatrimonial));
    }
    function getReceiptPatrimonial() {
        if(localStorage.formDataReceiptPatrimonial !== undefined){
            formDataReceiptPatrimonial = JSON.parse(localStorage.formDataReceiptPatrimonial);
            for (var i = 0; i < formDataReceiptPatrimonial.length; i++) {
                $(`[name=${formDataReceiptPatrimonial[i].name}]`).val(formDataReceiptPatrimonial[i].value);
                if ((formDataReceiptPatrimonial[i].name === 'fraccionamiento_boolean_recibo') && (formDataReceiptPatrimonial[i].value === true)) {
                    document.getElementById("fraccionamiento_boolean_recibo").checked = formDataReceiptPatrimonial[i].value;
                    document.getElementById("active-select-1").style.display = "inline";
                    document.getElementById("active-select-2").style.display = "inline";
                }
            }
        }
    }
</script>

<script>
    function storeValuesCommissionPatrimonial() {
        let formCommissionPatrimonial = [];
        localStorage.removeItem('formCommissionPatrimonial');
        $('#commission-form-patrimonial input[type=text]').each(function(){
            formCommissionPatrimonial.push({ name: this.name, value: this.value});
        });
        localStorage.setItem("formCommissionPatrimonial", JSON.stringify(formCommissionPatrimonial));
    }
    function getCommissionPatrimonial() {
        if(localStorage.formCommissionPatrimonial !== undefined){
            formCommissionPatrimonial = JSON.parse(localStorage.formCommissionPatrimonial);
            for (var i = 0; i < formCommissionPatrimonial.length; i++) {
                $(`[name=${formCommissionPatrimonial[i].name}]`).val(formCommissionPatrimonial[i].value);
            }
        }
    }
</script>

<!-- Poliza de Fianza -->
<script>
    function storeValuesPolicyBail() {
        let formDataPolicyBail = [];
        localStorage.removeItem('formDataPolicyBail');
        $('#policy-form-bail input[type=text]').each(function(){
            formDataPolicyBail.push({ name: this.name, value: this.value});
        });
        $('#policy-form-bail input[type=email]').each(function(){
            formDataPolicyBail.push({ name: this.name, value: this.value});
        });
        $('#policy-form-bail input[type=date]').each(function(){
            formDataPolicyBail.push({ name: this.name, value: this.value});
        });
        $('#policy-form-bail select').each(function(){
            formDataPolicyBail.push({ name: this.name, value: this.value});
        });
        $('#policy-form-bail #tomador_asegurado_poliza').each(function(){
            let markedCheck = $(this).prop('checked');
            formDataPolicyBail.push({ name: this.name, value: markedCheck});
        });
        localStorage.setItem("formDataPolicyBail", JSON.stringify(formDataPolicyBail));
    }
    function getPolicyBail() {
        if(localStorage.formDataPolicyBail !== undefined){
            formDataPolicyBail = JSON.parse(localStorage.formDataPolicyBail);
            for (var i = 0; i < formDataPolicyBail.length; i++) {
                $(`[name=${formDataPolicyBail[i].name}]`).val(formDataPolicyBail[i].value);
                if ((formDataPolicyBail[i].name === 'tomador_asegurado_poliza') && (formDataPolicyBail[i].value === true)) {
                    document.getElementById("tomador_asegurado_poliza").checked = formDataPolicyBail[i].value;
                }
                if ((formDataPolicyBail[i].name === 'tipo_canal_poliza') && (formDataPolicyBail[i].value === 'AGENTE PROPIO')) {
                    document.getElementById("searchList").style.display = "block";
                }
            }
        }
    }
</script>

<script>
    function storeValuesReceiptBail() {
        let formDataReceiptBail = [];
        localStorage.removeItem('formDataReceiptBail');
        $('#receipt-form-bail input[type=text]').each(function(){
            formDataReceiptBail.push({ name: this.name, value: this.value});
        });
        $('#receipt-form-bail input[type=number]').each(function(){
            formDataReceiptBail.push({ name: this.name, value: this.value});
        });
        $('#receipt-form-bail input[type=date]').each(function(){
            formDataReceiptBail.push({ name: this.name, value: this.value});
        });
        $('#receipt-form-bail select').each(function(){
            formDataReceiptBail.push({ name: this.name, value: this.value});
        });
        $('#receipt-form-bail #fraccionamiento_boolean_recibo').each(function(){
            let markedCheck = $(this).prop('checked');
            formDataReceiptBail.push({ name: this.name, value: markedCheck});
        });
        localStorage.setItem("formDataReceiptBail", JSON.stringify(formDataReceiptBail));
    }
    function getReceiptBail() {
        if(localStorage.formDataReceiptBail !== undefined){
            formDataReceiptBail = JSON.parse(localStorage.formDataReceiptBail);
            for (var i = 0; i < formDataReceiptBail.length; i++) {
                $(`[name=${formDataReceiptBail[i].name}]`).val(formDataReceiptBail[i].value);
                if ((formDataReceiptBail[i].name === 'fraccionamiento_boolean_recibo') && (formDataReceiptBail[i].value === true)) {
                    document.getElementById("fraccionamiento_boolean_recibo").checked = formDataReceiptBail[i].value;
                    document.getElementById("active-select-1").style.display = "inline";
                    document.getElementById("active-select-2").style.display = "inline";
                }
            }
        }
    }
</script>

<script>
    function storeValuesCommissionBail() {
        let formCommissionBail = [];
        localStorage.removeItem('formCommissionBail');
        $('#commission-form-bail input[type=text]').each(function(){
            formCommissionBail.push({ name: this.name, value: this.value});
        });
        localStorage.setItem("formCommissionBail", JSON.stringify(formCommissionBail));
    }
    function getCommissionBail() {
        if(localStorage.formCommissionBail !== undefined){
            formCommissionBail = JSON.parse(localStorage.formCommissionBail);
            for (var i = 0; i < formCommissionBail.length; i++) {
                $(`[name=${formCommissionBail[i].name}]`).val(formCommissionBail[i].value);
            }
        }
    }
</script>

<!-- Poliza de Otros Ramos -->
<script>
    function storeValuesPolicyAnotherBranch() {
        let formDataPolicyAnotherBranch = [];
        localStorage.removeItem('formDataPolicyAnotherBranch');
        $('#policy-form-another-Branch input[type=text]').each(function(){
            formDataPolicyAnotherBranch.push({ name: this.name, value: this.value});
        });
        $('#policy-form-another-Branch input[type=email]').each(function(){
            formDataPolicyAnotherBranch.push({ name: this.name, value: this.value});
        });
        $('#policy-form-another-Branch input[type=date]').each(function(){
            formDataPolicyAnotherBranch.push({ name: this.name, value: this.value});
        });
        $('#policy-form-another-Branch select').each(function(){
            formDataPolicyAnotherBranch.push({ name: this.name, value: this.value});
        });
        $('#policy-form-another-Branch #tomador_asegurado_poliza').each(function(){
            let markedCheck = $(this).prop('checked');
            formDataPolicyAnotherBranch.push({ name: this.name, value: markedCheck});
        });
        localStorage.setItem("formDataPolicyAnotherBranch", JSON.stringify(formDataPolicyAnotherBranch));
    }
    function getPolicyAnotherBranch() {
        if(localStorage.formDataPolicyAnotherBranch !== undefined){
            formDataPolicyAnotherBranch = JSON.parse(localStorage.formDataPolicyAnotherBranch);
            for (var i = 0; i < formDataPolicyAnotherBranch.length; i++) {
                $(`[name=${formDataPolicyAnotherBranch[i].name}]`).val(formDataPolicyAnotherBranch[i].value);
                if ((formDataPolicyAnotherBranch[i].name === 'tomador_asegurado_poliza') && (formDataPolicyAnotherBranch[i].value === true)) {
                    document.getElementById("tomador_asegurado_poliza").checked = formDataPolicyAnotherBranch[i].value;
                }
                if ((formDataPolicyAnotherBranch[i].name === 'tipo_canal_poliza') && (formDataPolicyAnotherBranch[i].value === 'AGENTE PROPIO')) {
                    document.getElementById("searchList").style.display = "block";
                }
            }
        }
    }
</script>

<script>
    function storeValuesReceiptAnotherBranch() {
        let formDataReceiptAnotherBranch = [];
        localStorage.removeItem('formDataReceiptAnotherBranch');
        $('#receipt-form-another-branch input[type=text]').each(function(){
            formDataReceiptAnotherBranch.push({ name: this.name, value: this.value});
        });
        $('#receipt-form-another-branch input[type=number]').each(function(){
            formDataReceiptAnotherBranch.push({ name: this.name, value: this.value});
        });
        $('#receipt-form-another-branch input[type=date]').each(function(){
            formDataReceiptAnotherBranch.push({ name: this.name, value: this.value});
        });
        $('#receipt-form-another-branch select').each(function(){
            formDataReceiptAnotherBranch.push({ name: this.name, value: this.value});
        });
        $('#receipt-form-another-branch #fraccionamiento_boolean_recibo').each(function(){
            let markedCheck = $(this).prop('checked');
            formDataReceiptAnotherBranch.push({ name: this.name, value: markedCheck});
        });
        localStorage.setItem("formDataReceiptAnotherBranch", JSON.stringify(formDataReceiptAnotherBranch));
    }
    function getReceiptAnotherBranch() {
        if(localStorage.formDataReceiptAnotherBranch !== undefined){
            formDataReceiptAnotherBranch = JSON.parse(localStorage.formDataReceiptAnotherBranch);
            for (var i = 0; i < formDataReceiptAnotherBranch.length; i++) {
                $(`[name=${formDataReceiptAnotherBranch[i].name}]`).val(formDataReceiptAnotherBranch[i].value);
                if ((formDataReceiptAnotherBranch[i].name === 'fraccionamiento_boolean_recibo') && (formDataReceiptAnotherBranch[i].value === true)) {
                    document.getElementById("fraccionamiento_boolean_recibo").checked = formDataReceiptAnotherBranch[i].value;
                    document.getElementById("active-select-1").style.display = "inline";
                    document.getElementById("active-select-2").style.display = "inline";
                }
            }
        }
    }
</script>

<script>
    function storeValuesCommissionAnotherBranch() {
        let formCommissionAnotherBranch = [];
        localStorage.removeItem('formCommissionAnotherBranch');
        $('#commission-form-another-branch input[type=text]').each(function(){
            formCommissionAnotherBranch.push({ name: this.name, value: this.value});
        });
        localStorage.setItem("formCommissionAnotherBranch", JSON.stringify(formCommissionAnotherBranch));
    }
    function getCommissionAnotherBranch() {
        if(localStorage.formCommissionAnotherBranch !== undefined){
            formCommissionAnotherBranch = JSON.parse(localStorage.formCommissionAnotherBranch);
            for (var i = 0; i < formCommissionAnotherBranch.length; i++) {
                $(`[name=${formCommissionAnotherBranch[i].name}]`).val(formCommissionAnotherBranch[i].value);
            }
        }
    }
</script>

<!-- Poliza de AP -->
<script>
    function storeValuesPolicyAp() {
        let formDataPolicyAp = [];
        localStorage.removeItem('formDataPolicyAp');
        $('#policy-form-ap input[type=text]').each(function(){
            formDataPolicyAp.push({ name: this.name, value: this.value});
        });
        $('#policy-form-ap input[type=email]').each(function(){
            formDataPolicyAp.push({ name: this.name, value: this.value});
        });
        $('#policy-form-ap input[type=date]').each(function(){
            formDataPolicyAp.push({ name: this.name, value: this.value});
        });
        $('#policy-form-ap select').each(function(){
            formDataPolicyAp.push({ name: this.name, value: this.value});
        });
        $('#policy-form-ap #tomador_asegurado_poliza').each(function(){
            let markedCheck = $(this).prop('checked');
            formDataPolicyAp.push({ name: this.name, value: markedCheck});
        });
        localStorage.setItem("formDataPolicyAp", JSON.stringify(formDataPolicyAp));
    }
    function getPolicyAp() {
        if(localStorage.formDataPolicyAp !== undefined){
            formDataPolicyAp = JSON.parse(localStorage.formDataPolicyAp);
            for (var i = 0; i < formDataPolicyAp.length; i++) {
                $(`[name=${formDataPolicyAp[i].name}]`).val(formDataPolicyAp[i].value);
                if ((formDataPolicyAp[i].name === 'tomador_asegurado_poliza') && (formDataPolicyAp[i].value === true)) {
                    document.getElementById("tomador_asegurado_poliza").checked = formDataPolicyAp[i].value;
                }
                if ((formDataPolicyAp[i].name === 'tipo_canal_poliza') && (formDataPolicyAp[i].value === 'AGENTE PROPIO')) {
                    document.getElementById("searchList").style.display = "block";
                }
            }
        }
    }
</script>

<script>
    function storeValuesReceiptAp() {
        let formDataReceiptAp = [];
        localStorage.removeItem('formDataReceiptAp');
        $('#receipt-form-ap input[type=text]').each(function(){
            formDataReceiptAp.push({ name: this.name, value: this.value});
        });
        $('#receipt-form-ap input[type=number]').each(function(){
            formDataReceiptAp.push({ name: this.name, value: this.value});
        });
        $('#receipt-form-ap input[type=date]').each(function(){
            formDataReceiptAp.push({ name: this.name, value: this.value});
        });
        $('#receipt-form-ap select').each(function(){
            formDataReceiptAp.push({ name: this.name, value: this.value});
        });
        $('#receipt-form-ap #fraccionamiento_boolean_recibo').each(function(){
            let markedCheck = $(this).prop('checked');
            formDataReceiptAp.push({ name: this.name, value: markedCheck});
        });
        localStorage.setItem("formDataReceiptAp", JSON.stringify(formDataReceiptAp));
    }
    function getReceiptAp() {
        if(localStorage.formDataReceiptAp !== undefined){
            formDataReceiptAp = JSON.parse(localStorage.formDataReceiptAp);
            for (var i = 0; i < formDataReceiptAp.length; i++) {
                $(`[name=${formDataReceiptAp[i].name}]`).val(formDataReceiptAp[i].value);
                if ((formDataReceiptAp[i].name === 'fraccionamiento_boolean_recibo') && (formDataReceiptAp[i].value === true)) {
                    document.getElementById("fraccionamiento_boolean_recibo").checked = formDataReceiptAp[i].value;
                    document.getElementById("active-select-1").style.display = "inline";
                    document.getElementById("active-select-2").style.display = "inline";
                }
            }
        }
    }
</script>

<script>
    function storeValuesCommissionAp() {
        let formCommissionAp = [];
        localStorage.removeItem('formCommissionAp');
        $('#commission-form-ap input[type=text]').each(function(){
            formCommissionAp.push({ name: this.name, value: this.value});
        });
        localStorage.setItem("formCommissionAp", JSON.stringify(formCommissionAp));
    }
    function getCommissionAp() {
        if(localStorage.formCommissionAp !== undefined){
            formCommissionAp = JSON.parse(localStorage.formCommissionAp);
            for (var i = 0; i < formCommissionAp.length; i++) {
                $(`[name=${formCommissionAp[i].name}]`).val(formCommissionAp[i].value);
            }
        }
    }
</script>

<!-- Poliza de Viaje -->
<script>
    function storeValuesPolicyTravel() {
        let formDataPolicyTravel = [];
        localStorage.removeItem('formDataPolicyTravel');
        $('#policy-form-travel input[type=text]').each(function(){
            formDataPolicyTravel.push({ name: this.name, value: this.value});
        });
        $('#policy-form-travel input[type=email]').each(function(){
            formDataPolicyTravel.push({ name: this.name, value: this.value});
        });
        $('#policy-form-travel input[type=date]').each(function(){
            formDataPolicyTravel.push({ name: this.name, value: this.value});
        });
        $('#policy-form-travel select').each(function(){
            formDataPolicyTravel.push({ name: this.name, value: this.value});
        });
        $('#policy-form-travel #tomador_asegurado_poliza').each(function(){
            let markedCheck = $(this).prop('checked');
            formDataPolicyTravel.push({ name: this.name, value: markedCheck});
        });
        localStorage.setItem("formDataPolicyTravel", JSON.stringify(formDataPolicyTravel));
    }
    function getPolicyTravel() {
        if(localStorage.formDataPolicyTravel !== undefined){
            formDataPolicyTravel = JSON.parse(localStorage.formDataPolicyTravel);
            for (var i = 0; i < formDataPolicyTravel.length; i++) {
                $(`[name=${formDataPolicyTravel[i].name}]`).val(formDataPolicyTravel[i].value);
                if ((formDataPolicyTravel[i].name === 'tomador_asegurado_poliza') && (formDataPolicyTravel[i].value === true)) {
                    document.getElementById("tomador_asegurado_poliza").checked = formDataPolicyTravel[i].value;
                }
                if ((formDataPolicyTravel[i].name === 'tipo_canal_poliza') && (formDataPolicyTravel[i].value === 'AGENTE PROPIO')) {
                    document.getElementById("searchList").style.display = "block";
                }
            }
        }
    }
</script>

<script>
    function storeValuesReceiptTravel() {
        let formDataReceiptTravel = [];
        localStorage.removeItem('formDataReceiptTravel');
        $('#receipt-form-travel input[type=text]').each(function(){
            formDataReceiptTravel.push({ name: this.name, value: this.value});
        });
        $('#receipt-form-travel input[type=number]').each(function(){
            formDataReceiptTravel.push({ name: this.name, value: this.value});
        });
        $('#receipt-form-travel input[type=date]').each(function(){
            formDataReceiptTravel.push({ name: this.name, value: this.value});
        });
        $('#receipt-form-travel select').each(function(){
            formDataReceiptTravel.push({ name: this.name, value: this.value});
        });
        $('#receipt-form-travel #fraccionamiento_boolean_recibo').each(function(){
            let markedCheck = $(this).prop('checked');
            formDataReceiptTravel.push({ name: this.name, value: markedCheck});
        });
        localStorage.setItem("formDataReceiptTravel", JSON.stringify(formDataReceiptTravel));
    }
    function getReceiptTravel() {
        if(localStorage.formDataReceiptTravel !== undefined){
            formDataReceiptTravel = JSON.parse(localStorage.formDataReceiptTravel);
            for (var i = 0; i < formDataReceiptTravel.length; i++) {
                $(`[name=${formDataReceiptTravel[i].name}]`).val(formDataReceiptTravel[i].value);
                if ((formDataReceiptTravel[i].name === 'fraccionamiento_boolean_recibo') && (formDataReceiptTravel[i].value === true)) {
                    document.getElementById("fraccionamiento_boolean_recibo").checked = formDataReceiptTravel[i].value;
                    document.getElementById("active-select-1").style.display = "inline";
                    document.getElementById("active-select-2").style.display = "inline";
                }
            }
        }
    }
</script>

<script>
    function storeValuesCommissionTravel() {
        let formCommissionTravel = [];
        localStorage.removeItem('formCommissionTravel');
        $('#commission-form-travel input[type=text]').each(function(){
            formCommissionTravel.push({ name: this.name, value: this.value});
        });
        localStorage.setItem("formCommissionTravel", JSON.stringify(formCommissionTravel));
    }
    function getCommissionTravel() {
        if(localStorage.formCommissionTravel !== undefined){
            formCommissionTravel = JSON.parse(localStorage.formCommissionTravel);
            for (var i = 0; i < formCommissionTravel.length; i++) {
                $(`[name=${formCommissionTravel[i].name}]`).val(formCommissionTravel[i].value);
            }
        }
    }
</script>

<script>
    $(document).ready(function () {
        if ((document.getElementById("select_box").value === 'V') || (document.getElementById("select_box").value === 'E')) {
            var cleaveNumeral = new Cleave('.input-numeral', {
                numeral: true,
                numeralDecimalMark: ',',
                delimiter: '.',
                stripLeadingZeroes: false
            });
        } else {
            var cleaveNumeral = new Cleave('.input-numeral', {
                numeral: true,
                numeralDecimalMark: '!',
                delimiter: '',
                stripLeadingZeroes: false
            });
        }

        $('#select_box').change(function(){
            if ((this.value === 'V') || (this.value === 'E')) {
                var cleaveNumeral = new Cleave('.input-numeral', {
                    numeral: true,
                    numeralDecimalMark: ',',
                    delimiter: '.',
                    stripLeadingZeroes: false
                });
                cleaveNumeral.setRawValue('');
            } else {
                var cleaveNumeral = new Cleave('.input-numeral', {
                    numeral: true,
                    numeralDecimalMark: '!',
                    delimiter: '',
                    stripLeadingZeroes: false,
                });
                cleaveNumeral.setRawValue('');
            }
        });

        if ((document.getElementById("select_box2").value === 'V') || (document.getElementById("select_box2").value === 'E')) {
            var cleaveNumeral = new Cleave('.input-numeral2', {
                numeral: true,
                numeralDecimalMark: ',',
                delimiter: '.',
                stripLeadingZeroes: false
            });
        } else {
            var cleaveNumeral = new Cleave('.input-numeral2', {
                numeral: true,
                numeralDecimalMark: '!',
                delimiter: '',
                stripLeadingZeroes: false
            });
        }

        $('#select_box2').change(function(){
            if ((this.value === 'V') || (this.value === 'E')) {
                var cleaveNumeral = new Cleave('.input-numeral2', {
                    numeral: true,
                    numeralDecimalMark: ',',
                    delimiter: '.',
                    stripLeadingZeroes: false
                });
                cleaveNumeral.setRawValue('');
            } else {
                var cleaveNumeral = new Cleave('.input-numeral2', {
                    numeral: true,
                    numeralDecimalMark: '!',
                    delimiter: '',
                    stripLeadingZeroes: false
                });
                cleaveNumeral.setRawValue('');
            }
        });
        
        $('#fecha_desde_poliza').change(function () {
            var extraer = $('#fecha_desde_poliza').val();
            extraer = extraer.split('-');
            year = parseInt(extraer[0]);
            month = parseInt(extraer[1]) - 1;
            day = parseInt(extraer[2]);
            var fecha = moment([year, month, day]).add(1, 'years');
            fecha = fecha.toISOString().substring(0, 10);
            $('#fecha_hasta_poliza').val(fecha);
        });

        // Poliza Patrimonial
        getPolicyPatrimonial();
        getReceiptPatrimonial();
        getCommissionPatrimonial();

        // Poliza Fianza
        getPolicyBail();
        getReceiptBail();
        getCommissionBail();

        // Poliza Otros Ramos
        getPolicyAnotherBranch();
        getReceiptAnotherBranch();
        getCommissionAnotherBranch();

        // Poliza AP
        getPolicyAp();
        getReceiptAp();
        getCommissionAp();

        // Poliza Viaje
        getPolicyTravel();
        getReceiptTravel();
        getCommissionTravel();
    });
</script>

<script>
    window.addEventListener("load", function() {
        document.getElementById("radioContainer").addEventListener("click", function() {
            document.getElementById("active-select-1").style.display = document.getElementById("fraccionamiento_boolean_recibo").checked ? "inline" : "none";
            document.getElementById("active-select-2").style.display = document.getElementById("fraccionamiento_boolean_recibo").checked ? "inline" : "none";
        });
    });
</script>

<script>
    var naturalInsureds = <%- JSON.stringify(naturalInsureds) %>;
    var legalInsureds = <%- JSON.stringify(legalInsureds) %>;
    function pasarNombreTomador() {
        var idRif = document.getElementById("id_rif_tomador").value;
        var selectBox = document.getElementById("select_box").value;
        var checkboxTomadorViejo = document.getElementById("tomador_asegurado_poliza").checked;
        if ((selectBox === 'J') || (selectBox === 'G') || (selectBox === 'I') || (selectBox === 'F')) {
            for (let i = 0; i < legalInsureds.length; i++) {
                let elementLegalInsured = legalInsureds[i];
                if ((selectBox === elementLegalInsured.tipo_rif_asegurado_per_jur) && (idRif === elementLegalInsured.rif_asegurado_per_jur)) {
                    document.getElementById("correo_tomador").value = elementLegalInsured.correo_asegurado_per_jur;
                    document.getElementById("nombre_tomador_poliza").value = elementLegalInsured.razon_social_per_jur;
                    if (checkboxTomadorViejo === true) {
                        document.getElementById("select_box2").value = elementLegalInsured.tipo_rif_asegurado_per_jur;
                        document.getElementById("id_rif_asegurado").value = elementLegalInsured.rif_asegurado_per_jur;
                        document.getElementById("correo_asegurado").value = elementLegalInsured.correo_asegurado_per_jur;
                        document.getElementById("nombre_asegurado").value = elementLegalInsured.razon_social_per_jur;
                    } else {
                        document.getElementById("select_box2").value = 'V';
                        document.getElementById("id_rif_asegurado").value = ''
                        document.getElementById("correo_asegurado").value = '';
                        document.getElementById("nombre_asegurado").value = '';
                    }
                    break;
                } else {
                    document.getElementById("correo_tomador").value = '';
                    document.getElementById("nombre_tomador_poliza").value = '';
                }
            }
        } else {
            for (let i = 0; i < naturalInsureds.length; i++) {
                let elementNaturalInsured = naturalInsureds[i];
                if (idRif.match(/^\d/)) {
                    if ((selectBox === elementNaturalInsured.tipo_cedula_asegurado_per_nat) && (idRif === elementNaturalInsured.cedula_asegurado_per_nat)) {
                        document.getElementById("correo_tomador").value = elementNaturalInsured.correo_asegurado_per_nat;
                        document.getElementById("nombre_tomador_poliza").value = elementNaturalInsured.nombre_asegurado_per_nat + ' ' + elementNaturalInsured.apellido_asegurado_per_nat;
                        if (checkboxTomadorViejo === true) {
                            document.getElementById("select_box2").value = elementNaturalInsured.tipo_cedula_asegurado_per_nat;
                            document.getElementById("id_rif_asegurado").value = elementNaturalInsured.cedula_asegurado_per_nat;
                            document.getElementById("correo_asegurado").value = elementNaturalInsured.correo_asegurado_per_nat;
                            document.getElementById("nombre_asegurado").value = elementNaturalInsured.nombre_asegurado_per_nat + ' ' + elementNaturalInsured.apellido_asegurado_per_nat;
                        } else {
                            document.getElementById("select_box2").value = 'V';
                            document.getElementById("id_rif_asegurado").value = ''
                            document.getElementById("correo_asegurado").value = '';
                            document.getElementById("nombre_asegurado").value = '';
                        }
                        break;
                    } else {
                        document.getElementById("correo_tomador").value = '';
                        document.getElementById("nombre_tomador_poliza").value = '';
                    }
                } else if (idRif.startsWith('')) {
                    document.getElementById("correo_tomador").value = '';
                    document.getElementById("nombre_tomador_poliza").value = '';
                }
            }
        }
    }
</script>

<script>
    var naturalInsureds = <%- JSON.stringify(naturalInsureds) %>;
    var legalInsureds = <%- JSON.stringify(legalInsureds) %>;
    function pasarNombreAsegurado() {
        var idRif = document.getElementById("id_rif_asegurado").value;
        var selectBox2 = document.getElementById("select_box2").value;
        if ((selectBox2 === 'J') || (selectBox2 === 'G') || (selectBox2 === 'I') || (selectBox2 === 'F')) {
            for (let i = 0; i < legalInsureds.length; i++) {
                let elementLegalInsured = legalInsureds[i];
                if ((selectBox2 === elementLegalInsured.tipo_rif_asegurado_per_jur) && (idRif === elementLegalInsured.rif_asegurado_per_jur)) {
                    document.getElementById("correo_asegurado").value = elementLegalInsured.correo_asegurado_per_jur;
                    document.getElementById("nombre_asegurado").value = elementLegalInsured.razon_social_per_jur;
                    break;
                } else {
                    document.getElementById("correo_asegurado").value = '';
                    document.getElementById("nombre_asegurado").value = '';
                }
            }
        } else {
            for (let i = 0; i < naturalInsureds.length; i++) {
                let elementNaturalInsured = naturalInsureds[i];
                if (idRif.match(/^\d/)) {
                    if ((selectBox2 === elementNaturalInsured.tipo_cedula_asegurado_per_nat) && (idRif === elementNaturalInsured.cedula_asegurado_per_nat)) {
                        document.getElementById("correo_asegurado").value = elementNaturalInsured.correo_asegurado_per_nat;
                        document.getElementById("nombre_asegurado").value = elementNaturalInsured.nombre_asegurado_per_nat + ' ' + elementNaturalInsured.apellido_asegurado_per_nat;
                        break;
                    } else {
                        document.getElementById("correo_asegurado").value = '';
                        document.getElementById("nombre_asegurado").value = '';
                    }
                } else if (idRif.startsWith('')) {
                    document.getElementById("correo_asegurado").value = '';
                    document.getElementById("nombre_asegurado").value = '';
                }
            }
        }
    }
</script>

<script>
    function showList() {
        var getSelectValue = document.getElementById("tipo_canal_poliza").value;
        if (getSelectValue === 'AGENTE PROPIO') {
            document.getElementById("searchList").style.display = "block";
        } else {
            document.getElementById("nombre_agentes_propios").value = '';
            document.getElementById("searchList").style.display = "none";
        }
    }   
</script>

<script>
    function currencySignChange() {
        let coinType = document.getElementById("tipo_moneda_poliza").value;
        if (coinType === 'BOLÍVAR') {
            $('.currency_format').toArray().forEach(function(field) {
                new Cleave(field, {
                    numeral: true,
                    numeralDecimalMark: ',',
                    delimiter: '.',
                    prefix: 'Bs ',
                });
            });
        } else if (coinType === 'DÓLAR') {
            $('.currency_format').toArray().forEach(function(field) {
                new Cleave(field, {
                    numeral: true,
                    numeralDecimalMark: ',',
                    delimiter: '.',
                    prefix: '$ ',
                });
            });
        } else if (coinType === 'EUROS') {
            $('.currency_format').toArray().forEach(function(field) {
                new Cleave(field, {
                    numeral: true,
                    numeralDecimalMark: ',',
                    delimiter: '.',
                    prefix: '€ ',
                });
            });
        }
    }   
</script>

<% if (typeof(policy) !== 'undefined') { %>
    <script>
        var policy = <%- JSON.stringify(policy) %>;
        function premiumCalculationDate() {
            var getSelectValue = document.getElementById("tipo_fraccionamiento_recibo").value;
            var checkboxDivision = document.getElementById("fraccionamiento_boolean_recibo").checked;
            if (getSelectValue === 'MENSUAL') {
                $(document).ready(function () {
                    $('#tipo_fraccionamiento_recibo').change(function () {
                        var extraer = $('#fecha_desde_recibo').val();
                        extraer = extraer.split('-');
                        year = parseInt(extraer[0]);
                        month = parseInt(extraer[1]) - 1;
                        day = parseInt(extraer[2]);
                        var fecha = moment([year, month, day]).add(1, 'months');
                        fecha = fecha.toISOString().substring(0, 10);
                        $('#fecha_pago_recibo').val(fecha);
                    });
                });
                $(document).ready(function () {
                    $('#fecha_desde_recibo').change(function () {
                        var extraer = $('#fecha_desde_recibo').val();
                        extraer = extraer.split('-');
                        year = parseInt(extraer[0]);
                        month = parseInt(extraer[1]) - 1;
                        day = parseInt(extraer[2]);
                        var fecha = moment([year, month, day]).add(1, 'months');
                        fecha = fecha.toISOString().substring(0, 10);
                        $('#fecha_hasta_recibo').val(fecha);
                    });
                });
                var numberMonthly = document.getElementById("numero_pago_recibo").value;
                if ((numberMonthly === '') || (numberMonthly === '0')) {
                    numberMonthly = 1;
                }
                var premiumMonthly = policy.prima_anual_poliza / numberMonthly;
                premiumMonthly = String(premiumMonthly);
                if (policy.tipo_moneda_poliza === 'BOLÍVAR') {
                    let cleave = new Cleave("#monto_prima_recibo", {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: 'Bs ',
                    });
                    cleave.setRawValue(premiumMonthly);
                } else if (policy.tipo_moneda_poliza === 'DÓLAR') {
                    let cleave = new Cleave("#monto_prima_recibo", {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: '$ ',
                    });
                    cleave.setRawValue(premiumMonthly);
                } else if (policy.tipo_moneda_poliza === 'EUROS') {
                    let cleave = new Cleave("#monto_prima_recibo", {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: '€ ',
                    });
                    cleave.setRawValue(premiumMonthly);
                }
            } else if (getSelectValue === 'BIMESTRAL') {
                $(document).ready(function () {
                    $('#tipo_fraccionamiento_recibo').change(function () {
                        var extraer = $('#fecha_desde_recibo').val();
                        extraer = extraer.split('-');
                        year = parseInt(extraer[0]);
                        month = parseInt(extraer[1]) - 1;
                        day = parseInt(extraer[2]);
                        var fecha = moment([year, month, day]).add(2, 'months');
                        fecha = fecha.toISOString().substring(0, 10);
                        $('#fecha_pago_recibo').val(fecha);
                    });
                });
                $(document).ready(function () {
                    $('#fecha_desde_recibo').change(function () {
                        var extraer = $('#fecha_desde_recibo').val();
                        extraer = extraer.split('-');
                        year = parseInt(extraer[0]);
                        month = parseInt(extraer[1]) - 1;
                        day = parseInt(extraer[2]);
                        var fecha = moment([year, month, day]).add(2, 'months');
                        fecha = fecha.toISOString().substring(0, 10);
                        $('#fecha_hasta_recibo').val(fecha);
                    });
                });
                var premiumBimonthly = policy.prima_anual_poliza / 6;
                premiumBimonthly = String(premiumBimonthly);
                document.getElementById("numero_pago_recibo").value = 6;
                if (policy.tipo_moneda_poliza === 'BOLÍVAR') {
                    let cleave = new Cleave("#monto_prima_recibo", {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: 'Bs ',
                    });
                    cleave.setRawValue(premiumBimonthly);
                } else if (policy.tipo_moneda_poliza === 'DÓLAR') {
                    let cleave = new Cleave("#monto_prima_recibo", {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: '$ ',
                    });
                    cleave.setRawValue(premiumBimonthly);
                } else if (policy.tipo_moneda_poliza === 'EUROS') {
                    let cleave = new Cleave("#monto_prima_recibo", {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: '€ ',
                    });
                    cleave.setRawValue(premiumBimonthly);
                }
            } else if (getSelectValue === 'TRIMESTRAL') {
                $(document).ready(function () {
                    $('#tipo_fraccionamiento_recibo').change(function () {
                        var extraer = $('#fecha_desde_recibo').val();
                        extraer = extraer.split('-');
                        year = parseInt(extraer[0]);
                        month = parseInt(extraer[1]) - 1;
                        day = parseInt(extraer[2]);
                        var fecha = moment([year, month, day]).add(3, 'months');
                        fecha = fecha.toISOString().substring(0, 10);
                        $('#fecha_pago_recibo').val(fecha);
                    });
                });
                $(document).ready(function () {
                    $('#fecha_desde_recibo').change(function () {
                        var extraer = $('#fecha_desde_recibo').val();
                        extraer = extraer.split('-');
                        year = parseInt(extraer[0]);
                        month = parseInt(extraer[1]) - 1;
                        day = parseInt(extraer[2]);
                        var fecha = moment([year, month, day]).add(3, 'months');
                        fecha = fecha.toISOString().substring(0, 10);
                        $('#fecha_hasta_recibo').val(fecha);
                    });
                });
                var premiumQuarterly = policy.prima_anual_poliza / 4;
                premiumQuarterly = String(premiumQuarterly);
                document.getElementById("numero_pago_recibo").value = 4;
                if (policy.tipo_moneda_poliza === 'BOLÍVAR') {
                    let cleave = new Cleave("#monto_prima_recibo", {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: 'Bs ',
                    });
                    cleave.setRawValue(premiumQuarterly);
                } else if (policy.tipo_moneda_poliza === 'DÓLAR') {
                    let cleave = new Cleave("#monto_prima_recibo", {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: '$ ',
                    });
                    cleave.setRawValue(premiumQuarterly);
                } else if (policy.tipo_moneda_poliza === 'EUROS') {
                    let cleave = new Cleave("#monto_prima_recibo", {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: '€ ',
                    });
                    cleave.setRawValue(premiumQuarterly);
                }
            } else if (getSelectValue === 'SEMESTRAL') {
                $(document).ready(function () {
                    $('#tipo_fraccionamiento_recibo').change(function () {
                        var extraer = $('#fecha_desde_recibo').val();
                        extraer = extraer.split('-');
                        year = parseInt(extraer[0]);
                        month = parseInt(extraer[1]) - 1;
                        day = parseInt(extraer[2]);
                        var fecha = moment([year, month, day]).add(6, 'months');
                        fecha = fecha.toISOString().substring(0, 10);
                        $('#fecha_pago_recibo').val(fecha);
                    });
                });
                $(document).ready(function () {
                    $('#fecha_desde_recibo').change(function () {
                        var extraer = $('#fecha_desde_recibo').val();
                        extraer = extraer.split('-');
                        year = parseInt(extraer[0]);
                        month = parseInt(extraer[1]) - 1;
                        day = parseInt(extraer[2]);
                        var fecha = moment([year, month, day]).add(6, 'months');
                        fecha = fecha.toISOString().substring(0, 10);
                        $('#fecha_hasta_recibo').val(fecha);
                    });
                });
                var premiumBiannual = policy.prima_anual_poliza / 2;
                premiumBiannual = String(premiumBiannual);
                document.getElementById("numero_pago_recibo").value = 2;
                if (policy.tipo_moneda_poliza === 'BOLÍVAR') {
                    let cleave = new Cleave("#monto_prima_recibo", {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: 'Bs ',
                    });
                    cleave.setRawValue(premiumBiannual);
                } else if (policy.tipo_moneda_poliza === 'DÓLAR') {
                    let cleave = new Cleave("#monto_prima_recibo", {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: '$ ',
                    });
                    cleave.setRawValue(premiumBiannual);
                } else if (policy.tipo_moneda_poliza === 'EUROS') {
                    let cleave = new Cleave("#monto_prima_recibo", {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: '€ ',
                    });
                    cleave.setRawValue(premiumBiannual);
                }
            }  else if (getSelectValue === 'ANUAL') {
                $(document).ready(function () {
                    $('#tipo_fraccionamiento_recibo').change(function () {
                        var extraer = $('#fecha_desde_recibo').val();
                        extraer = extraer.split('-');
                        year = parseInt(extraer[0]);
                        month = parseInt(extraer[1]) - 1;
                        day = parseInt(extraer[2]);
                        var fecha = moment([year, month, day]).add(1, 'years');
                        fecha = fecha.toISOString().substring(0, 10);
                        $('#fecha_pago_recibo').val(fecha);
                    });
                });
                $(document).ready(function () {
                    $('#fecha_desde_recibo').change(function () {
                        var extraer = $('#fecha_desde_recibo').val();
                        extraer = extraer.split('-');
                        year = parseInt(extraer[0]);
                        month = parseInt(extraer[1]) - 1;
                        day = parseInt(extraer[2]);
                        var fecha = moment([year, month, day]).add(1, 'years');
                        fecha = fecha.toISOString().substring(0, 10);
                        $('#fecha_hasta_recibo').val(fecha);
                    });
                });
                var annualPremium = policy.prima_anual_poliza / 1;
                annualPremium = String(annualPremium);
                document.getElementById("numero_pago_recibo").value = 1;
                if (policy.tipo_moneda_poliza === 'BOLÍVAR') {
                    let cleave = new Cleave("#monto_prima_recibo", {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: 'Bs ',
                    });
                    cleave.setRawValue(annualPremium);
                } else if (policy.tipo_moneda_poliza === 'DÓLAR') {
                    let cleave = new Cleave("#monto_prima_recibo", {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: '$ ',
                    });
                    cleave.setRawValue(annualPremium);
                } else if (policy.tipo_moneda_poliza === 'EUROS') {
                    let cleave = new Cleave("#monto_prima_recibo", {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: '€ ',
                    });
                    cleave.setRawValue(annualPremium);
                }
            }
            if (checkboxDivision === false) {
                if (policy.tipo_moneda_poliza === 'BOLÍVAR') {
                    let cleave = new Cleave("#monto_prima_recibo", {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: 'Bs ',
                    });
                    cleave.setRawValue(String(policy.prima_anual_poliza));
                } else if (policy.tipo_moneda_poliza === 'DÓLAR') {
                    let cleave = new Cleave("#monto_prima_recibo", {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: '$ ',
                    });
                    cleave.setRawValue(String(policy.prima_anual_poliza));
                } else if (policy.tipo_moneda_poliza === 'EUROS') {
                    let cleave = new Cleave("#monto_prima_recibo", {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: '€ ',
                    });
                    cleave.setRawValue(String(policy.prima_anual_poliza));
                }
                document.getElementById("numero_pago_recibo").value = 0;
                document.getElementById("tipo_fraccionamiento_recibo").value = '';
                document.getElementById("fecha_pago_recibo").value = '';
                document.getElementById("fecha_desde_recibo").value = '';
                document.getElementById("fecha_hasta_recibo").value = '';
            }
        }
    </script>

    <script>
        var policy = <%- JSON.stringify(policy) %>;
        window.onload = function() {
            if (policy.tipo_moneda_poliza === 'BOLÍVAR') {
                $('.currency_format_number').toArray().forEach(function(field) {
                    new Cleave(field, {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: 'Bs ',
                    });
                });
            } else if (policy.tipo_moneda_poliza === 'DÓLAR') {
                $('.currency_format_number').toArray().forEach(function(field) {
                    new Cleave(field, {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: '$ ',
                    });
                });
            } else if (policy.tipo_moneda_poliza === 'EUROS') {
                $('.currency_format_number').toArray().forEach(function(field) {
                    new Cleave(field, {
                        numeral: true,
                        numeralDecimalMark: ',',
                        delimiter: '.',
                        prefix: '€ ',
                    });
                });
            }
        }   
    </script>
<% } %>

</body>

</html>